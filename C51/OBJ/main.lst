C51 COMPILER V9.53.0.0   MAIN                                                              01/11/2025 09:38:15 PAGE 1   


C51 COMPILER V9.53.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN ..\OBJ\main.obj
COMPILER INVOKED BY: C:\Program Files (x86)\KEIL\C51\BIN\C51.EXE main.c LARGE OMF2 OPTIMIZE(3,SIZE) BROWSE INCDIR(..\USE
                    -R;..\FUNC_HANDLER;..\GUI_APP;..\HANDWARE\UART2) DEBUG PRINT(..\OBJ\main.lst) TABS(2) OBJECT(..\OBJ\main.obj)

line level    source

   1          #include "sys.h"
   2          #include "uart2.h"
   3          #include <string.h>
   4          extern  u8 modbus_addresses[5];     // –ê–¥—Ä–µ—Å–∞ —É—Å—Ç—Ä–æ–π—Å—Ç–≤
   5          extern  u16 start_reg;              // –ù–∞—á–∞–ª—å–Ω—ã–π —Ä–µ–≥–∏—Å—Ç—Ä
   6          extern  u16 num_reg;                // –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–µ–≥–∏—Å—Ç—Ä–æ–≤
   7          
   8          extern volatile u32 rcv_timer;
   9          extern volatile  u32 sys_tick;
  10          extern u8  uart2_step;
  11          
  12          #define FIRST_TXT    "DGUS Tool\0\0"
  13          #define TEST_TXT     "DGUS TEST TEXT\0\0"
  14          #define INT_TXT    "INERRUPT \0\0"
  15          #define WHILE_TXT    "WHILE___ \0\0"
  16          
  17          
  18          
  19          // –ü—Ä–æ—Ç–æ—Ç–∏–ø —Ñ—É–Ω–∫—Ü–∏–∏
  20          void modbus_requests(ModbusRequest *requests);
  21          
  22          
  23          void modbus_requests(ModbusRequest *requests) {
  24   1          u8 packet[8];
  25   1          u16 crc;
  26   1      
  27   1          // –§–æ—Ä–º–∏—Ä—É–µ–º –∑–∞–ø—Ä–æ—Å Modbus
  28   1          packet[0] = requests->address;                      // –ê–¥—Ä–µ—Å —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞
  29   1          packet[1] = requests->command;                                  // –ö–æ–¥ —Ñ—É–Ω–∫—Ü–∏–∏ (—á—Ç–µ–Ω–∏–µ
             - —Ä–µ–≥–∏—Å—Ç—Ä–æ–≤)
  30   1          packet[2] = (requests->start_register >> 8) & 0xFF; // –°—Ç–∞—Ä—à–∏–π –±–∞–π—Ç –Ω–∞—á–∞–ª—å–Ω–æ–≥–æ —Ä
             -–µ–≥–∏—Å—Ç—Ä–∞
  31   1          packet[3] = requests->start_register & 0xFF;        // –ú–ª–∞–¥—à–∏–π –±–∞–π—Ç –Ω–∞—á–∞–ª—å–Ω–æ–≥–æ —Ä
             -–µ–≥–∏—Å—Ç—Ä–∞
  32   1          packet[4] = (requests->num_registers >> 8) & 0xFF;  // –°—Ç–∞—Ä—à–∏–π –±–∞–π—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —Ä
             -–µ–≥–∏—Å—Ç—Ä–æ–≤
  33   1          packet[5] = requests->num_registers & 0xFF;         // –ú–ª–∞–¥—à–∏–π –±–∞–π—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —Ä
             -–µ–≥–∏—Å—Ç—Ä–æ–≤
  34   1      
  35   1          // –í—ã—á–∏—Å–ª—è–µ–º CRC
  36   1          crc = calculate_crc(packet, 6);
  37   1          packet[7] = crc & 0xFF;                            // –ú–ª–∞–¥—à–∏–π –±–∞–π—Ç CRC
  38   1          packet[6] = (crc >> 8) & 0xFF;                     // –°—Ç–∞—Ä—à–∏–π –±–∞–π—Ç CRC
  39   1          // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å —á–µ—Ä–µ–∑ UART
  40   1          u2_send_bytes(packet, 8);
  41   1      }
  42          
  43          
  44          
  45          
  46          void main(void)
  47          {   
  48   1      
  49   1      // –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –≤ `xdata`
C51 COMPILER V9.53.0.0   MAIN                                                              01/11/2025 09:38:15 PAGE 2   

  50   1      idata  ModbusRequest request[6] = {
  51   1          {0x2, 0x3, 0x0000, 0x4},   // –£—Å—Ç—Ä–æ–π—Å—Ç–≤–æ 1
  52   1          {0x4, 0x3, 0x0000, 0x2},   // –£—Å—Ç—Ä–æ–π—Å—Ç–≤–æ 2
  53   1          {0x3, 0x3, 0x0002, 0x2},   // –£—Å—Ç—Ä–æ–π—Å—Ç–≤–æ 3
  54   1          {0x1, 0x3, 0x0000, 0x2},   // –£—Å—Ç—Ä–æ–π—Å—Ç–≤–æ 4
  55   1          {0x5, 0x3, 0x00FD, 0x1},  // –£—Å—Ç—Ä–æ–π—Å—Ç–≤–æ 5
  56   1          {0x6, 0x3, 0x002F, 0x1}   // –£—Å—Ç—Ä–æ–π—Å—Ç–≤–æ 6
  57   1      };
  58   1      
  59   1       idata  ModbusRequest temp_request;
  60   1        u8 send_buff[8]={0, };
  61   1        u32 polling_timer=0;                    // –¢–∞–π–º–µ—Ä –æ–∂–∏–¥–∞–Ω–∏—è –æ—Ç–≤–µ—Ç–∞
  62   1        u8 polling_state;                     // –°–æ—Å—Ç–æ—è–Ω–∏–µ –æ–ø—Ä–æ—Å–∞: 0 - –æ—Ç–ø—Ä–∞–≤–∫–∞, 1 - –æ–∂–
             -∏–¥–∞–Ω–∏–µ
  63   1        u16 len;
  64   1        u16 i;
  65   1        u8 buff[48]={0, };
  66   1        u16 recv_len;
  67   1        idata u8 command_value; // –û–±—ä—è–≤–ª–µ–Ω–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π
  68   1        float temperature;
  69   1        u16 rawValue;
  70   1        xdata ModbusPacket receivedPacket;
  71   1        
  72   1      u16 receive_cmd=0;
  73   1      xdata u16 receive_adr=0;
  74   1      
  75   1           xdata u16 result=0;  
  76   1           sys_init();//System initialization
  77   1           uart2_init(9600);//Initialize serial port 2
  78   1           current_device = 0;
  79   1           polling_state=0;
  80   1        while(1){   
  81   2          
  82   2          
  83   2          
  84   2        //  if(((sys_tick-rcv_timer)>=400000)&&(polling_state == 1)&&(rcv_complete)){uart2_rx_sta |= UART2_PACKET_
             -OK; }; // –¢–∞–π–º–∞—É—Ç –ø—Ä–µ—Ä—ã–≤–∞–Ω–∏—è –ø—Ä–∏—ë–º–∞ –¥–∞–Ω–Ω—ã—Ö 
  85   2              
  86   2                
  87   2          
  88   2          if(uart2_rx_sta & UART2_PACKET_OK)
  89   2          {
  90   3              
  91   3            len = uart2_rx_sta&UART2_PACKET_LEN;
  92   3              
  93   3            sys_write_vp(0x2069, (u16*)&len, 2);
*** WARNING C182 IN LINE 93 OF main.c: pointer to different objects
  94   3        
  95   3            recv_len = 0;
  96   3            for(i=0;i<len;i++)
  97   3            {
  98   4              recv_len += sprintf(buff+recv_len,"%02X ",(u16)uart2_buf[i]);
  99   4            }
 100   3            sys_write_vp(0x2010,"                                ",16);
 101   3            sys_write_vp(0x2010,buff,recv_len/2+2);
 102   3            for(i=0;i<48;i++)
 103   3            {
 104   4              buff[i]=0;
 105   4            }
 106   3            
 107   3            result=parseModbusPacket(&uart2_buf,len,(ModbusPacket*)&receivedPacket);    
 108   3             sys_write_vp(0x2071, &result, 1);
C51 COMPILER V9.53.0.0   MAIN                                                              01/11/2025 09:38:15 PAGE 3   

*** WARNING C182 IN LINE 108 OF main.c: pointer to different objects
 109   3             if (result==1) {   
 110   4                   sys_write_vp(0x2096, "OK    \n", 4);
 111   4             
 112   4             switch (receivedPacket.rcv_address) {
 113   5      
 114   5                 case 0x01: 
 115   5                   
 116   5                  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–ª–∏–Ω—É –¥–∞–Ω–Ω—ã—Ö
 117   5                          if (receivedPacket.rcv_dataLength >= 2) {
 118   6                              // –ò–∑–≤–ª–µ–∫–∞–µ–º –¥–∞–Ω–Ω—ã–µ (–ø–µ—Ä–≤—ã–π —Ä–µ–≥–∏—Å—Ç—Ä)
 119   6                              rawValue = (receivedPacket.rcv_data[0] << 8) | receivedPacket.rcv_data[1];
 120   6                              if (rawValue & 0x8000) { // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–Ω–∞–∫ —á–∏—Å–ª–∞
 121   7                                  rawValue = rawValue - 65536; // –û—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
 122   7                              }
 123   6                             temperature = rawValue / 10.0; // –ú–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–∏–µ
 124   6                             sys_write_vp(0x2005,(u8*)&temperature,2);    
 125   6                             } else {
 126   6                            
 127   6                              }
 128   5                        //  break;
 129   5                              
 130   5                     case 0x02:           
 131   5                        
 132   5      
 133   5                       if (receivedPacket.rcv_dataLength >= 2) {
 134   6                            
 135   6                          // –ò–∑–≤–ª–µ–∫–∞–µ–º –¥–∞–Ω–Ω—ã–µ (–ø–µ—Ä–≤—ã–π —Ä–µ–≥–∏—Å—Ç—Ä)
 136   6                              rawValue = (receivedPacket.rcv_data[0] << 8) | receivedPacket.rcv_data[1];
 137   6                              if (rawValue & 0x8000) { // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–Ω–∞–∫ —á–∏—Å–ª–∞
 138   7                                  rawValue = rawValue - 65536; // –û—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
 139   7                              }
 140   6                            
 141   6                                
 142   6                             } else {
 143   6                            
 144   6                              }
 145   5                        //  break;               
 146   5                 
 147   5                   //  default: break;
 148   5             }
 149   4             
 150   4             
 151   4             
 152   4             
 153   4             }
 154   3              if (result==99) {sys_write_vp(0x2096, "Lenght\n", 4);}  
 155   3              
 156   3             else{ sys_write_vp(0x2096, "ERROR\n", 4); }
 157   3            
 158   3            
 159   3              uart2_rx_sta = 0;
 160   3              len=0;
 161   3             
 162   3             for(i=0;i<UART2_PACKET_MAX_LEN;i++)
 163   3            {
 164   4              uart2_buf[i]=0;
 165   4            }
 166   3             
 167   3             
 168   3            rcv_complete=1;
 169   3          }
C51 COMPILER V9.53.0.0   MAIN                                                              01/11/2025 09:38:15 PAGE 4   

 170   2         
 171   2          
 172   2        
 173   2          
 174   2      if (polling_state==0) {
 175   3             if (current_device >= 6) {
 176   4                 current_device = 0; // –°–±—Ä–∞—Å—ã–≤–∞–µ–º –∏–Ω–¥–µ–∫—Å, –µ—Å–ª–∏ –æ–Ω –≤—ã—Ö–æ–¥–∏—Ç –∑–∞ –≥—
             -Ä–∞–Ω–∏—Ü—ã
 177   4                }
 178   3        
 179   3                
 180   3          sys_delay_ms(5);
 181   3          temp_request = request[current_device];
 182   3          sys_write_vp(0x2000,(u8*)&current_device,1);
 183   3          command_value = temp_request.command; // –ü—Ä–∏—Å–≤–∞–∏–≤–∞–Ω–∏–µ –∑–Ω–∞—á–µ–Ω–∏—è
 184   3          sys_write_vp(0x2001, &temp_request.command, 1); // –ó–∞–ø–∏—Å—å –∑–Ω–∞—á–µ–Ω–∏—è –∫–æ–º–∞–Ω–¥—ã
*** WARNING C182 IN LINE 184 OF main.c: pointer to different objects
 185   3          sys_write_vp(0x2002, &temp_request.start_register, 1); // –ó–∞–ø–∏—Å—å –ø–µ—Ä–≤–æ–≥–æ —Ä–µ–≥–∏—Å—Ç—Ä–∞
*** WARNING C182 IN LINE 185 OF main.c: pointer to different objects
 186   3          data_len=(temp_request.num_registers * 2)+5;  
 187   3          sys_write_vp(0x2003,(u16*)&data_len, 2);  
*** WARNING C182 IN LINE 187 OF main.c: pointer to different objects
 188   3          sys_write_vp(0x2004, &temp_request.address, 1);
*** WARNING C182 IN LINE 188 OF main.c: pointer to different objects
 189   3          modbus_requests((ModbusRequest*)&temp_request);
 190   3            polling_state=1;
 191   3            polling_timer=200000; 
 192   3            rcv_timer=sys_tick;
 193   3             }
 194   2      
 195   2            polling_timer--;
 196   2          
 197   2          
 198   2          // –°–æ—Å—Ç–æ—è–Ω–∏–µ 1: –û–∂–∏–¥–∞–Ω–∏–µ –æ—Ç–≤–µ—Ç–∞
 199   2          if (polling_state == 1) {
 200   3              // –ï—Å–ª–∏ –ø–æ–ª—É—á–µ–Ω –æ—Ç–≤–µ—Ç
 201   3            
 202   3              if (rcv_complete==1) {
 203   4                  sys_write_vp(0x2042, "Received        \n", 9);      
 204   4                  // –ü–µ—Ä–µ—Ö–æ–¥ –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —É—Å—Ç—Ä–æ–π—Å—Ç–≤—É
 205   4                  current_device=current_device+1;
 206   4                  polling_state = 0;  // –í–æ–∑–≤—Ä–∞—Ç –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–∫–∏
 207   4                  rcv_complete=0;
 208   4                  polling_timer=200000;
 209   4              }
 210   3              // –ï—Å–ª–∏ –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è –∏—Å—Ç–µ–∫–ª–æ
 211   3               if (polling_timer ==0) {
 212   4                  // –õ–æ–≥–∏—Ä—É–µ–º —Ç–∞–π–º–∞—É—Ç (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
 213   4                  sys_write_vp(0x2042, "Timeout         \n", 9);
 214   4           
 215   4                  for(i=0;i<48;i++)
 216   4                  {
 217   5                    buff[i]=0;
 218   5                  }
 219   4                  // –ü–µ—Ä–µ—Ö–æ–¥ –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —É—Å—Ç—Ä–æ–π—Å—Ç–≤—É
 220   4                  current_device=current_device+1;
 221   4                  polling_state = 0;  // –í–æ–∑–≤—Ä–∞—Ç –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–∫–∏
 222   4                  rcv_complete=0;
 223   4              }     
 224   3          } 
 225   2        }
 226   1          
C51 COMPILER V9.53.0.0   MAIN                                                              01/11/2025 09:38:15 PAGE 5   

 227   1      }
 228          
 229          
 230          
 231          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1413    ----
   CONSTANT SIZE    =    202    ----
   XDATA SIZE       =   ----     162
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----      57
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  6 WARNING(S),  0 ERROR(S)
