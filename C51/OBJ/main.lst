C51 COMPILER V9.53.0.0   MAIN                                                              01/14/2025 13:19:18 PAGE 1   


C51 COMPILER V9.53.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN ..\OBJ\main.obj
COMPILER INVOKED BY: C:\Program Files (x86)\KEIL\C51\BIN\C51.EXE main.c LARGE OMF2 OPTIMIZE(3,SIZE) BROWSE INCDIR(..\USE
                    -R;..\FUNC_HANDLER;..\GUI_APP;..\HANDWARE\UART2) DEBUG PRINT(..\OBJ\main.lst) TABS(2) OBJECT(..\OBJ\main.obj)

line level    source

   1          #include "sys.h"
   2          #include "uart2.h"
   3          #include <string.h>
   4          extern  u8 modbus_addresses[5];     // –ê–¥—Ä–µ—Å–∞ —É—Å—Ç—Ä–æ–π—Å—Ç–≤
   5          extern  u16 start_reg;              // –ù–∞—á–∞–ª—å–Ω—ã–π —Ä–µ–≥–∏—Å—Ç—Ä
   6          extern  u16 num_reg;                // –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–µ–≥–∏—Å—Ç—Ä–æ–≤
   7          
   8          extern volatile u32 rcv_timer;
   9          extern volatile  u32 sys_tick;
  10          extern u8  uart2_step;
  11          
  12          #define FIRST_TXT    "DGUS Tool\0\0"
  13          #define TEST_TXT     "DGUS TEST TEXT\0\0"
  14          #define INT_TXT    "INERRUPT \0\0"
  15          #define WHILE_TXT    "WHILE___ \0\0"
  16          
  17          
  18          
  19          // –ü—Ä–æ—Ç–æ—Ç–∏–ø —Ñ—É–Ω–∫—Ü–∏–∏
  20          void modbus_requests(ModbusRequest *requests);
  21          
  22          void main(void)
  23          {   
  24   1      
  25   1      // –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –≤ `xdata`
  26   1      idata  ModbusRequest request[6] = {
  27   1          {0x2, 0x3, 0x0000, 0x4},   // –£—Å—Ç—Ä–æ–π—Å—Ç–≤–æ 1
  28   1          {0x4, 0x3, 0x0000, 0x2},   // –£—Å—Ç—Ä–æ–π—Å—Ç–≤–æ 2
  29   1          {0x3, 0x3, 0x0002, 0x2},   // –£—Å—Ç—Ä–æ–π—Å—Ç–≤–æ 3
  30   1          {0x1, 0x3, 0x0000, 0x2},   // –£—Å—Ç—Ä–æ–π—Å—Ç–≤–æ 4
  31   1          {0x5, 0x3, 0x00FD, 0x1},  // –£—Å—Ç—Ä–æ–π—Å—Ç–≤–æ 5
  32   1          {0x6, 0x3, 0x002F, 0x1}   // –£—Å—Ç—Ä–æ–π—Å—Ç–≤–æ 6
  33   1      };
  34   1      
  35   1       idata  ModbusRequest temp_request;
  36   1        u8 send_buff[8]={0, };
  37   1        u32 polling_timer=0;                    // –¢–∞–π–º–µ—Ä –æ–∂–∏–¥–∞–Ω–∏—è –æ—Ç–≤–µ—Ç–∞
  38   1        u8 polling_state;                     // –°–æ—Å—Ç–æ—è–Ω–∏–µ –æ–ø—Ä–æ—Å–∞: 0 - –æ—Ç–ø—Ä–∞–≤–∫–∞, 1 - –æ–∂–
             -∏–¥–∞–Ω–∏–µ
  39   1        u16 len;
  40   1        u16 i;
  41   1        u8 buff[48]={0, };
  42   1        u16 recv_len;
  43   1        idata u8 command_value; // –û–±—ä—è–≤–ª–µ–Ω–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π
  44   1        float temperature;
  45   1        u16 rawValue;
  46   1        xdata ModbusPacket receivedPacket;
  47   1        u16 freq;
  48   1      u16 receive_cmd=0;
  49   1      xdata u16 receive_adr=0;
  50   1      
  51   1           xdata u16 result=0;  
  52   1           sys_init();//System initialization
  53   1           uart2_init(9600);//Initialize serial port 2
C51 COMPILER V9.53.0.0   MAIN                                                              01/14/2025 13:19:18 PAGE 2   

  54   1           current_device = 0;
  55   1           polling_state=0;
  56   1        while(1){   
  57   2          
  58   2          
  59   2          
  60   2          if(((sys_tick-rcv_timer)>=800000)&&(polling_state == 1)&&(uart2_rx_sta)){uart2_rx_sta |= UART2_PACKET_OK
             -; }; // –¢–∞–π–º–∞—É—Ç –ø—Ä–µ—Ä—ã–≤–∞–Ω–∏—è –ø—Ä–∏—ë–º–∞ –¥–∞–Ω–Ω—ã—Ö 
  61   2              
  62   2                
  63   2          
  64   2          if(uart2_rx_sta & UART2_PACKET_OK)
  65   2          {
  66   3              
  67   3            len = uart2_rx_sta&UART2_PACKET_LEN;
  68   3              
  69   3            sys_write_vp(0x2069, (u16*)&len, 2);
*** WARNING C182 IN LINE 69 OF main.c: pointer to different objects
  70   3        
  71   3            recv_len = 0;
  72   3            for(i=0;i<len;i++)
  73   3            {
  74   4              recv_len += sprintf(buff+recv_len,"%02X ",(u16)uart2_buf[i]);
  75   4            }
  76   3            sys_write_vp(0x2010,"                                ",16);
  77   3            sys_write_vp(0x2010,buff,recv_len/2+2);
  78   3            for(i=0;i<48;i++)
  79   3            {
  80   4              buff[i]=0;
  81   4            }
  82   3            
  83   3            result=parseModbusPacket(&uart2_buf,len,(ModbusPacket*)&receivedPacket);    
  84   3             sys_write_vp(0x2071, &result, 1);
*** WARNING C182 IN LINE 84 OF main.c: pointer to different objects
  85   3             if (result==1) {   
  86   4                   sys_write_vp(0x2096, "OK    \n", 4);
  87   4             
  88   4             switch (receivedPacket.rcv_address) {
  89   5      
  90   5                 case 0x01: 
  91   5                   
  92   5                  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–ª–∏–Ω—É –¥–∞–Ω–Ω—ã—Ö
  93   5                          if (receivedPacket.rcv_dataLength >= 2) {
  94   6                              // –ò–∑–≤–ª–µ–∫–∞–µ–º –¥–∞–Ω–Ω—ã–µ (–ø–µ—Ä–≤—ã–π —Ä–µ–≥–∏—Å—Ç—Ä)
  95   6                              rawValue = (receivedPacket.rcv_data[0] << 8) | receivedPacket.rcv_data[1];
  96   6                              if (rawValue & 0x8000) { // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–Ω–∞–∫ —á–∏—Å–ª–∞
  97   7                                  rawValue = rawValue - 65536; // –û—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
  98   7                              }
  99   6                             temperature = rawValue / 10.0; // –ú–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–∏–µ
 100   6                             sys_write_vp(0x2005,(u8*)&temperature,2);    
 101   6                             } else {
 102   6                            
 103   6                              }
 104   5                          break;
 105   5                              
 106   5                     case 0x02:           
 107   5                        
 108   5      
 109   5                       if (receivedPacket.rcv_dataLength >= 2) {
 110   6                            
 111   6                          // –ò–∑–≤–ª–µ–∫–∞–µ–º –¥–∞–Ω–Ω—ã–µ (–ø–µ—Ä–≤—ã–π —Ä–µ–≥–∏—Å—Ç—Ä)
 112   6                             freq = (receivedPacket.rcv_data[0] << 8) | receivedPacket.rcv_data[1];  
C51 COMPILER V9.53.0.0   MAIN                                                              01/14/2025 13:19:18 PAGE 3   

 113   6                        
 114   6                              sys_write_vp(0x2007,(u16*)&freq,2);     
*** WARNING C182 IN LINE 114 OF main.c: pointer to different objects
 115   6                             } else {
 116   6                            
 117   6                              }
 118   5                          break;               
 119   5                 
 120   5                    default:
 121   5                  break;
 122   5             }
 123   4             
 124   4             
 125   4             
 126   4             
 127   4             }else if (result == 99) {
 128   4                  sys_write_vp(0x2096, "Lenght\n", 4);
 129   4              } else {
 130   4                  sys_write_vp(0x2096, "ERROR\n", 4);
 131   4              }
 132   3            
 133   3            
 134   3              uart2_rx_sta = 0;
 135   3              len=0;
 136   3             
 137   3             for(i=0;i<UART2_PACKET_MAX_LEN;i++)
 138   3            {
 139   4              uart2_buf[i]=0;
 140   4            }
 141   3             
 142   3             
 143   3            rcv_complete=1;
 144   3          }
 145   2         
 146   2          
 147   2        
 148   2          
 149   2      if (polling_state==0) {
 150   3             if (current_device >= 6) {
 151   4                 current_device = 0; // –°–±—Ä–∞—Å—ã–≤–∞–µ–º –∏–Ω–¥–µ–∫—Å, –µ—Å–ª–∏ –æ–Ω –≤—ã—Ö–æ–¥–∏—Ç –∑–∞ –≥—
             -Ä–∞–Ω–∏—Ü—ã
 152   4                }
 153   3        
 154   3                
 155   3          sys_delay_ms(5);
 156   3          temp_request = request[current_device];
 157   3          sys_write_vp(0x2000,(u8*)&current_device,1);
 158   3          command_value = temp_request.command; // –ü—Ä–∏—Å–≤–∞–∏–≤–∞–Ω–∏–µ –∑–Ω–∞—á–µ–Ω–∏—è
 159   3          sys_write_vp(0x2001, &temp_request.command, 1); // –ó–∞–ø–∏—Å—å –∑–Ω–∞—á–µ–Ω–∏—è –∫–æ–º–∞–Ω–¥—ã
*** WARNING C182 IN LINE 159 OF main.c: pointer to different objects
 160   3          sys_write_vp(0x2002, &temp_request.start_register, 1); // –ó–∞–ø–∏—Å—å –ø–µ—Ä–≤–æ–≥–æ —Ä–µ–≥–∏—Å—Ç—Ä–∞
*** WARNING C182 IN LINE 160 OF main.c: pointer to different objects
 161   3          data_len=(temp_request.num_registers * 2)+5;  
 162   3          sys_write_vp(0x2003,(u16*)&data_len, 2);  
*** WARNING C182 IN LINE 162 OF main.c: pointer to different objects
 163   3          sys_write_vp(0x2004, &temp_request.address, 1);
*** WARNING C182 IN LINE 163 OF main.c: pointer to different objects
 164   3          polling_timer=200000; 
 165   3          polling_state=1;
 166   3          modbus_requests((ModbusRequest*)&temp_request);
 167   3          //  polling_state=1;
 168   3           // polling_timer=200000; 
C51 COMPILER V9.53.0.0   MAIN                                                              01/14/2025 13:19:18 PAGE 4   

 169   3            rcv_timer=sys_tick;
 170   3             }
 171   2      
 172   2            polling_timer--;
 173   2          
 174   2          
 175   2          // –°–æ—Å—Ç–æ—è–Ω–∏–µ 1: –û–∂–∏–¥–∞–Ω–∏–µ –æ—Ç–≤–µ—Ç–∞
 176   2          if (polling_state == 1) {
 177   3              // –ï—Å–ª–∏ –ø–æ–ª—É—á–µ–Ω –æ—Ç–≤–µ—Ç
 178   3            
 179   3              if (rcv_complete==1) {
 180   4                  sys_write_vp(0x2042, "Received        \n", 9);      
 181   4                  // –ü–µ—Ä–µ—Ö–æ–¥ –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —É—Å—Ç—Ä–æ–π—Å—Ç–≤—É
 182   4                  current_device=current_device+1;
 183   4                  polling_state = 0;  // –í–æ–∑–≤—Ä–∞—Ç –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–∫–∏
 184   4                  rcv_complete=0;
 185   4                  polling_timer=200000;
 186   4              }
 187   3              // –ï—Å–ª–∏ –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è –∏—Å—Ç–µ–∫–ª–æ
 188   3               if (polling_timer ==0) {
 189   4                  // –õ–æ–≥–∏—Ä—É–µ–º —Ç–∞–π–º–∞—É—Ç (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
 190   4                  sys_write_vp(0x2042, "Timeout         \n", 9);
 191   4           
 192   4                  for(i=0;i<48;i++)
 193   4                  {
 194   5                    buff[i]=0;
 195   5                  }
 196   4                  // –ü–µ—Ä–µ—Ö–æ–¥ –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —É—Å—Ç—Ä–æ–π—Å—Ç–≤—É
 197   4                  current_device=current_device+1;
 198   4                  polling_state = 0;  // –í–æ–∑–≤—Ä–∞—Ç –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–∫–∏
 199   4                  rcv_complete=0;
 200   4              }     
 201   3          } 
 202   2        }
 203   1          
 204   1      }
 205          
 206          
 207          
 208          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1328    ----
   CONSTANT SIZE    =    202    ----
   XDATA SIZE       =   ----     151
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----      57
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  7 WARNING(S),  0 ERROR(S)
