C51 COMPILER V9.53.0.0   MAIN                                                              03/20/2025 15:39:25 PAGE 1   


C51 COMPILER V9.53.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN ..\OBJ\main.obj
COMPILER INVOKED BY: C:\Program Files (x86)\KEIL\C51\BIN\C51.EXE main.c LARGE OMF2 OPTIMIZE(3,SIZE) BROWSE INCDIR(..\USE
                    -R;..\FUNC_HANDLER;..\GUI_APP;..\HANDWARE\UART2) DEBUG PRINT(..\OBJ\main.lst) TABS(2) OBJECT(..\OBJ\main.obj)

line level    source

   1          #include "sys.h"
   2          #include "uart2.h"
   3          #include <string.h>
   4          extern  u8 modbus_addresses[5];     // –ê–¥—Ä–µ—Å–∞ —É—Å—Ç—Ä–æ–π—Å—Ç–≤
   5          extern  u16 start_reg;              // –ù–∞—á–∞–ª—å–Ω—ã–π —Ä–µ–≥–∏—Å—Ç—Ä
   6          extern  u16 num_reg;                // –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–µ–≥–∏—Å—Ç—Ä–æ–≤
   7          
   8          extern volatile u32 rcv_timer;
   9          extern volatile  u32 sys_tick;
  10          extern u8  uart2_step;
  11          
  12          #define FIRST_TXT    "DGUS Tool\0\0"
  13          #define TEST_TXT     "DGUS TEST TEXT\0\0"
  14          #define INT_TXT    "INERRUPT \0\0"
  15          #define WHILE_TXT    "WHILE___ \0\0"
  16          #define BOUDRATE 9600
  17          #define DEVICES 8
  18          #define BTN_VAL_ADDR 3000
  19          #define POLLING_TIME 160000
  20          #define POWER_TIME 900000
  21          
  22          void main(void)
  23          {   
  24   1      
  25   1      // –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –≤ `xdata`
  26   1      idata  ModbusRequest request[DEVICES] = {
  27   1          {0x1, 0x5,   0x0000, 0x0,0x0000},   // –£—Å—Ç—Ä–æ–π—Å—Ç–≤–æ 1
  28   1          {0x2, 0x3,   0x0000, 0x6,0x0000},   // –£—Å—Ç—Ä–æ–π—Å—Ç–≤–æ 2
  29   1          {0x2, 0x10,  0x0000, 0x1,0x0000},   // –£—Å—Ç—Ä–æ–π—Å—Ç–≤–æ 3
  30   1          {0x3, 0x3,   0x0000, 0x1,0x0000},   // –£—Å—Ç—Ä–æ–π—Å—Ç–≤–æ 4
  31   1          {0x4, 0x3,   0x0000, 0x1,0x0000},   // –£—Å—Ç—Ä–æ–π—Å—Ç–≤–æ 5
  32   1          {0x5, 0x3,   0x0000, 0x1,0x0000},   // –£—Å—Ç—Ä–æ–π—Å—Ç–≤–æ 6
  33   1          {0x6, 0x3,   0x0000, 0x1,0x0000},   // –£—Å—Ç—Ä–æ–π—Å—Ç–≤–æ 7
  34   1          {0x7, 0x3,   0x0000, 0x1,0x0000}    // –£—Å—Ç—Ä–æ–π—Å—Ç–≤–æ 8
  35   1      };
  36   1      
  37   1       idata  ModbusRequest temp_request;
  38   1        u8 send_buff[8]={0,};
  39   1        u32 polling_timer=0;                    // –¢–∞–π–º–µ—Ä –æ–∂–∏–¥–∞–Ω–∏—è –æ—Ç–≤–µ—Ç–∞
  40   1        u8 polling_state;                     // –°–æ—Å—Ç–æ—è–Ω–∏–µ –æ–ø—Ä–æ—Å–∞: 0 - –æ—Ç–ø—Ä–∞–≤–∫–∞, 1 - –æ–∂–
             -∏–¥–∞–Ω–∏–µ
  41   1        u8 power_delay;
  42   1        u32 power_timer;
  43   1        u16 len;
  44   1        u16 i;
  45   1        u8 buff[48]={0, };
  46   1        idata u16 send_reg[8]={0,0,0,0,0,0,0,0 };
  47   1        idata u16 btn_val;
  48   1        u16 pwm_width;
  49   1        u16 coil_1;
  50   1        u16 coil_2;
  51   1        u16 coil_3;
  52   1        u16 coil_4;
  53   1        
C51 COMPILER V9.53.0.0   MAIN                                                              03/20/2025 15:39:25 PAGE 2   

  54   1        u16 icon_1;
  55   1        u16 icon_2;
  56   1        u16 icon_3;
  57   1        u16 icon_4;
  58   1        u16 pwr_btn;
  59   1        u16 pwr_icon;
  60   1        u16 auto_manual;
  61   1        u16 recv_len;
  62   1        idata u8 command_value; 
  63   1        float temperature;
  64   1        float temperature_1;
  65   1        float temperature_2;
  66   1        float temperature_3;
  67   1        float temperature_4;
  68   1        float pwm_percent;
  69   1        u16 rawValue;
  70   1        xdata ModbusPacket receivedPacket;
  71   1        u16 freq;
  72   1        u16 rpm;
  73   1        u16 tim_arr;
  74   1        u16 pwm;
  75   1        u16 color_speed;
  76   1        u16 receive_cmd=0;
  77   1        xdata u16 receive_adr=0;
  78   1        
  79   1      
  80   1           xdata u16 result=0;  
  81   1           sys_init();//System initialization
  82   1           uart2_init(BOUDRATE);//Initialize serial port 2
  83   1           current_device = 0;
  84   1           polling_state=0;
  85   1           sys_tick=IDLE_TIME;
  86   1           power_delay=0;
  87   1           power_timer=0;
  88   1          
  89   1        while(1){   
  90   2            
  91   2          if((sys_tick==0)&&(polling_state == 1)&&(uart2_rx_sta)){uart2_rx_sta |= UART2_PACKET_OK; }; // –¢–∞–π–º–
             -∞—É—Ç –ø—Ä–µ—Ä—ã–≤–∞–Ω–∏—è –ø—Ä–∏—ë–º–∞ –¥–∞–Ω–Ω—ã—Ö 
  92   2                
  93   2          if(uart2_rx_sta & UART2_PACKET_OK)
  94   2          {
  95   3              
  96   3            len = uart2_rx_sta & UART2_PACKET_LEN;
  97   3              
  98   3            sys_write_vp(0x2069, (u16*)&len, 2);
*** WARNING C182 IN LINE 98 OF main.c: pointer to different objects
  99   3        
 100   3            recv_len = 0;
 101   3            for(i=0;i<len;i++)
 102   3            {
 103   4              recv_len += sprintf(buff+recv_len,"%02X ",(u16)uart2_buf[i]);
 104   4            }
 105   3            sys_write_vp(0x2010,"                                ",16);
 106   3            sys_write_vp(0x2010,buff,recv_len/2+2);
 107   3            for(i=0;i<48;i++)
 108   3            {
 109   4              buff[i]=0;
 110   4            }
 111   3            sys_tick=IDLE_TIME;
 112   3            result=parseModbusPacket(&uart2_buf,len,(ModbusPacket*)&receivedPacket);    
 113   3             sys_write_vp(0x2071, &result, 1);
C51 COMPILER V9.53.0.0   MAIN                                                              03/20/2025 15:39:25 PAGE 3   

*** WARNING C182 IN LINE 113 OF main.c: pointer to different objects
 114   3             if (result==1) {   
 115   4                   sys_write_vp(0x2096, "OK    \n", 4);
 116   4             
 117   4             switch (receivedPacket.rcv_address) {
 118   5      
 119   5                 case 0x01:    
 120   5                  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–ª–∏–Ω—É –¥–∞–Ω–Ω—ã—Ö
 121   5                     /*     if (receivedPacket.rcv_dataLength >= 2) {
 122   5                              // –ò–∑–≤–ª–µ–∫–∞–µ–º –¥–∞–Ω–Ω—ã–µ (–ø–µ—Ä–≤—ã–π —Ä–µ–≥–∏—Å—Ç—Ä)
 123   5                              rawValue = (receivedPacket.rcv_data[0] << 8) | receivedPacket.rcv_data[1];
 124   5                              if (rawValue & 0x8000) { // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–Ω–∞–∫ —á–∏—Å–ª–∞
 125   5                                  rawValue = rawValue - 65536; // –û—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
 126   5                              }
 127   5                             temperature = rawValue / 10.0; // –ú–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–∏–µ
 128   5                             sys_write_vp(0x2005,(u8*)&temperature,2);  
 129   5                             rawValue = 0;                      
 130   5                             } else {
 131   5                            
 132   5                              } 
 133   5                          break;*/
 134   5                              
 135   5                  case 0x02:            
 136   5                        
 137   5      
 138   5                       if (receivedPacket.rcv_dataLength >= 2) {
 139   6                            
 140   6                          // –ò–∑–≤–ª–µ–∫–∞–µ–º –¥–∞–Ω–Ω—ã–µ (–ø–µ—Ä–≤—ã–π —Ä–µ–≥–∏—Å—Ç—Ä)
 141   6                            freq =(receivedPacket.rcv_data[0] << 8) | receivedPacket.rcv_data[1];  
 142   6                             rpm =(receivedPacket.rcv_data[4] << 8) | receivedPacket.rcv_data[5];
 143   6                         tim_arr =(receivedPacket.rcv_data[6] << 8) | receivedPacket.rcv_data[7];
 144   6                             pwm =(receivedPacket.rcv_data[8] << 8) | receivedPacket.rcv_data[9];
 145   6                         
 146   6                              if(auto_manual==1){sys_write_vp(0x2064,(u16*)&pwm,1);}    
*** WARNING C182 IN LINE 146 OF main.c: pointer to different objects
 147   6                               
 148   6                              
 149   6                              if(rpm<=45){
 150   7                              color_speed=0xC618;
 151   7                              sys_write_vp(0x5A1D,(u16*)&color_speed, 1);}
*** WARNING C182 IN LINE 151 OF main.c: pointer to different objects
 152   6                              if((rpm>45)&&(rpm<900)){
 153   7                              color_speed=0xFC00;
 154   7                              sys_write_vp(0x5A1D,(u16*)&color_speed, 1);}
*** WARNING C182 IN LINE 154 OF main.c: pointer to different objects
 155   6                              
 156   6                              pwm_percent=(pwm*1000.0)/tim_arr/10.0;
 157   6                              sys_write_vp(0x2081,(u16*)&rpm,1);  
*** WARNING C182 IN LINE 157 OF main.c: pointer to different objects
 158   6                              sys_write_vp(0x2083,(u16*)&pwm,1);
*** WARNING C182 IN LINE 158 OF main.c: pointer to different objects
 159   6                              sys_write_vp(0x2007,(u16*)&freq,2);   
*** WARNING C182 IN LINE 159 OF main.c: pointer to different objects
 160   6                              sys_write_vp(0x2115,(u8*)&pwm_percent,2); 
 161   6                         
 162   6                         
 163   6                             } else {
 164   6                                sys_write_vp(0x2096, "DATA_ERR\n", 6);
 165   6                               
 166   6                               break;
 167   6                              }
 168   5                          break;               
C51 COMPILER V9.53.0.0   MAIN                                                              03/20/2025 15:39:25 PAGE 4   

 169   5                 
 170   5                    case 0x03:     
 171   5                    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–ª–∏–Ω—É –¥–∞–Ω–Ω—ã—Ö
 172   5                          if (receivedPacket.rcv_dataLength >= 2) {
 173   6                              // –ò–∑–≤–ª–µ–∫–∞–µ–º –¥–∞–Ω–Ω—ã–µ (–ø–µ—Ä–≤—ã–π —Ä–µ–≥–∏—Å—Ç—Ä)
 174   6                              rawValue = (receivedPacket.rcv_data[0] << 8) | receivedPacket.rcv_data[1];
 175   6                              if (rawValue & 0x8000) { // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–Ω–∞–∫ —á–∏—Å–ª–∞
 176   7                                  rawValue = rawValue - 65536; // –û—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
 177   7                              }
 178   6                             temperature_1 = rawValue / 10.0; // –ú–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–∏–µ
 179   6                             sys_write_vp(0x2085,(u8*)&temperature_1,2);  
 180   6                             rawValue = 0;                        
 181   6                             } else {
 182   6                            
 183   6                              }
 184   5                          break;                    
 185   5                              
 186   5                              
 187   5                        case 0x04:     
 188   5                        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–ª–∏–Ω—É –¥–∞–Ω–Ω—ã—Ö
 189   5                          if (receivedPacket.rcv_dataLength >= 2) {
 190   6                              // –ò–∑–≤–ª–µ–∫–∞–µ–º –¥–∞–Ω–Ω—ã–µ (–ø–µ—Ä–≤—ã–π —Ä–µ–≥–∏—Å—Ç—Ä)
 191   6                              rawValue = (receivedPacket.rcv_data[0] << 8) | receivedPacket.rcv_data[1];
 192   6                              if (rawValue & 0x8000) { // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–Ω–∞–∫ —á–∏—Å–ª–∞
 193   7                                  rawValue = rawValue - 65536; // –û—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
 194   7                              }
 195   6                             temperature_2 = rawValue / 10.0; // –ú–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–∏–µ
 196   6                             sys_write_vp(0x2087,(u8*)&temperature_2,2);  
 197   6                             rawValue = 0;                        
 198   6                             } else {
 199   6                            
 200   6                              }
 201   5                          break;                    
 202   5                              
 203   5                              
 204   5                        case 0x05:     
 205   5                        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–ª–∏–Ω—É –¥–∞–Ω–Ω—ã—Ö
 206   5                          if (receivedPacket.rcv_dataLength >= 2) {
 207   6                              // –ò–∑–≤–ª–µ–∫–∞–µ–º –¥–∞–Ω–Ω—ã–µ (–ø–µ—Ä–≤—ã–π —Ä–µ–≥–∏—Å—Ç—Ä)
 208   6                              rawValue = (receivedPacket.rcv_data[0] << 8) | receivedPacket.rcv_data[1];
 209   6                              if (rawValue & 0x8000) { // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–Ω–∞–∫ —á–∏—Å–ª–∞
 210   7                                  rawValue = rawValue - 65536; // –û—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
 211   7                              }
 212   6                             temperature_3 = rawValue / 10.0; // –ú–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–∏–µ
 213   6                             sys_write_vp(0x2089,(u8*)&temperature_3,2);  
 214   6                             rawValue = 0;                        
 215   6                             } else {
 216   6                            
 217   6                              }
 218   5                          break;              
 219   5      
 220   5                        case 0x06:     
 221   5                        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–ª–∏–Ω—É –¥–∞–Ω–Ω—ã—Ö
 222   5                          if (receivedPacket.rcv_dataLength >= 2) {
 223   6                              // –ò–∑–≤–ª–µ–∫–∞–µ–º –¥–∞–Ω–Ω—ã–µ (–ø–µ—Ä–≤—ã–π —Ä–µ–≥–∏—Å—Ç—Ä)
 224   6                              rawValue = (receivedPacket.rcv_data[0] << 8) | receivedPacket.rcv_data[1];
 225   6                              if (rawValue & 0x8000) { // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–Ω–∞–∫ —á–∏—Å–ª–∞
 226   7                                  rawValue = rawValue - 65536; // –û—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
 227   7                              }
 228   6                             temperature_4 = rawValue / 10.0; // –ú–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–∏–µ
 229   6                             sys_write_vp(0x2091,(u8*)&temperature_4,2);  
 230   6                             rawValue = 0;                        
C51 COMPILER V9.53.0.0   MAIN                                                              03/20/2025 15:39:25 PAGE 5   

 231   6                             } else {
 232   6                            
 233   6                              }
 234   5                          break;  
 235   5      
 236   5                       case 0x07:    
 237   5                       // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–ª–∏–Ω—É –¥–∞–Ω–Ω—ã—Ö
 238   5                          if (receivedPacket.rcv_dataLength >= 2) {
 239   6                              // –ò–∑–≤–ª–µ–∫–∞–µ–º –¥–∞–Ω–Ω—ã–µ (–ø–µ—Ä–≤—ã–π —Ä–µ–≥–∏—Å—Ç—Ä)
 240   6                              rawValue = (receivedPacket.rcv_data[0] << 8) | receivedPacket.rcv_data[1];
 241   6                              if (rawValue & 0x8000) { // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–Ω–∞–∫ —á–∏—Å–ª–∞
 242   7                                  rawValue = rawValue - 65536; // –û—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
 243   7                              }
 244   6                             temperature = rawValue / 10.0; // –ú–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–∏–µ
 245   6                             sys_write_vp(0x2005,(u8*)&temperature,2);  
 246   6                             rawValue = 0;                      
 247   6                             } else {
 248   6                            
 249   6                              }
 250   5                          break;
 251   5                                                      
 252   5                                        
 253   5                              
 254   5                    default:
 255   5                  break;
 256   5             }
 257   4             
 258   4             
 259   4             
 260   4             
 261   4             }else if (result == 99) {
 262   4                  sys_write_vp(0x2096, "Lenght\n", 4);
 263   4               sys_delay_ms(20);
 264   4               uart2_rx_sta = 0;
 265   4                uart2_reset(BOUDRATE);
 266   4              }else if (result == 98) {
 267   4                  sys_write_vp(0x2096, "CRC   \n", 4);
 268   4                sys_delay_ms(20);
 269   4                uart2_rx_sta = 0;
 270   4                   uart2_reset(BOUDRATE);
 271   4              }else {
 272   4                  sys_write_vp(0x2096, "ERROR\n", 4);
 273   4                sys_delay_ms(20);
 274   4                uart2_rx_sta = 0;
 275   4                 uart2_reset(BOUDRATE);
 276   4              }
 277   3              
 278   3              uart2_rx_sta = 0;
 279   3              len=0;
 280   3             
 281   3             for(i=0;i<UART2_PACKET_MAX_LEN;i++)
 282   3            {
 283   4              uart2_buf[i]=0;
 284   4            }
 285   3                 
 286   3            rcv_complete=1;
 287   3          }
 288   2         
 289   2          
 290   2        
 291   2          
 292   2      if (polling_state==0) {
C51 COMPILER V9.53.0.0   MAIN                                                              03/20/2025 15:39:25 PAGE 6   

 293   3             if (current_device >= DEVICES) {
 294   4                 current_device = 0; // –°–±—Ä–∞—Å—ã–≤–∞–µ–º –∏–Ω–¥–µ–∫—Å, –µ—Å–ª–∏ –æ–Ω –≤—ã—Ö–æ–¥–∏—Ç –∑–∞ –≥—
             -Ä–∞–Ω–∏—Ü—ã
 295   4                }
 296   3        
 297   3                
 298   3          sys_delay_ms(15);
 299   3          temp_request = request[current_device];
 300   3          sys_write_vp(0x2000,(u8*)&current_device,1);
 301   3          command_value = temp_request.command; // –ü—Ä–∏—Å–≤–∞–∏–≤–∞–Ω–∏–µ –∑–Ω–∞—á–µ–Ω–∏—è
 302   3          sys_write_vp(0x2001, &temp_request.command, 1); // –ó–∞–ø–∏—Å—å –∑–Ω–∞—á–µ–Ω–∏—è –∫–æ–º–∞–Ω–¥—ã
*** WARNING C182 IN LINE 302 OF main.c: pointer to different objects
 303   3          sys_write_vp(0x2002, &temp_request.start_register, 1); // –ó–∞–ø–∏—Å—å –ø–µ—Ä–≤–æ–≥–æ —Ä–µ–≥–∏—Å—Ç—Ä–∞
*** WARNING C182 IN LINE 303 OF main.c: pointer to different objects
 304   3                
 305   3          if(command_value==0x03){      
 306   4          data_len=(temp_request.num_registers * 2)+5;  }
 307   3          
 308   3          if(command_value==0x10){      
 309   4          data_len=8;}
 310   3          
 311   3          if(command_value==0x5){     
 312   4          data_len=8;}
 313   3          
 314   3          if(command_value==0x6){     
 315   4          data_len=8;}
 316   3          
 317   3          if(command_value==0x0F){      
 318   4          data_len=8;}
 319   3          
 320   3          sys_write_vp(0x2003,(u16*)&data_len, 2);  
*** WARNING C182 IN LINE 320 OF main.c: pointer to different objects
 321   3          sys_write_vp(0x2004, &temp_request.address, 1);
*** WARNING C182 IN LINE 321 OF main.c: pointer to different objects
 322   3          polling_timer=POLLING_TIME; 
 323   3          polling_state=1;
 324   3          
 325   3          
 326   3          
 327   3          btn_val=0;
 328   3          sys_read_vp(0x2079,(u16*)&btn_val,1);
*** WARNING C182 IN LINE 328 OF main.c: pointer to different objects
 329   3          sys_read_vp(0x2064,(u16*)&pwm_width,1);
*** WARNING C182 IN LINE 329 OF main.c: pointer to different objects
 330   3          sys_read_vp(0x2073,(u16*)&freq,1);
*** WARNING C182 IN LINE 330 OF main.c: pointer to different objects
 331   3        
 332   3          if(pwm_width>=tim_arr){pwm_width=tim_arr;}
 333   3          
 334   3          
 335   3          send_reg[0]=pwm_width;
 336   3          send_reg[1]=pwm_width;
 337   3          send_reg[2]=pwm_width;
 338   3          send_reg[3]=pwm_width;
 339   3          send_reg[4]=freq;
 340   3          
 341   3          coil_1=btn_val&0x2;
 342   3          coil_2=btn_val&0x4;
 343   3          coil_3=btn_val&0x8;
 344   3          coil_4=btn_val&0x10;
 345   3          auto_manual=btn_val&0x20;
 346   3          pwr_btn=btn_val&0x40;
C51 COMPILER V9.53.0.0   MAIN                                                              03/20/2025 15:39:25 PAGE 7   

 347   3          
 348   3          icon_1=(coil_1>>1)&0x01;
 349   3          icon_2=(coil_2>>2)&0x01;
 350   3          icon_3=(coil_3>>3)&0x01;
 351   3          icon_4=(coil_4>>4)&0x01;
 352   3          pwr_icon=(pwr_btn>>6)&0x01;
 353   3          sys_write_vp(0x2105,(u16*)&icon_1,1);
*** WARNING C182 IN LINE 353 OF main.c: pointer to different objects
 354   3          sys_write_vp(0x2107,(u16*)&icon_2,1);
*** WARNING C182 IN LINE 354 OF main.c: pointer to different objects
 355   3          sys_write_vp(0x2109,(u16*)&icon_3,1);
*** WARNING C182 IN LINE 355 OF main.c: pointer to different objects
 356   3          sys_write_vp(0x2111,(u16*)&icon_4,1);
*** WARNING C182 IN LINE 356 OF main.c: pointer to different objects
 357   3          sys_write_vp(0x2113,(u16*)&pwr_icon,1);
*** WARNING C182 IN LINE 357 OF main.c: pointer to different objects
 358   3          
 359   3          if((pwr_icon==1)&&(power_delay==0)){
 360   4          request[0].command = 0x05;
 361   4          request[0].start_register = 0x0000;
 362   4          request[0].num_registers = 0xFF00;
 363   4          power_delay=1;
 364   4          power_timer=0;
 365   4          }
 366   3          
 367   3          
 368   3          if((pwr_icon==1)&&(power_delay==1)&&(power_timer>=POWER_TIME)){
 369   4          request[0].command = 0x05;
 370   4          request[0].start_register = 0x0001;
 371   4          request[0].num_registers = 0xFF00;
 372   4          power_delay=1;
 373   4          power_timer=0;
 374   4          }
 375   3        
 376   3          if(pwr_icon==0){
 377   4          request[0].command = 0x0F;
 378   4          request[0].start_register = 0x0000;
 379   4          request[0].num_registers = 0x0008;
 380   4          request[0].special_cmd = 0x0100;
 381   4          power_delay=0;
 382   4          power_timer=0;
 383   4          }
 384   3          
 385   3          btn_val&= 0x01;
 386   3          setBitInUint16(&send_reg[7], 0, btn_val);
 387   3          setBitInUint16(&send_reg[7], 1, coil_1);
 388   3          setBitInUint16(&send_reg[7], 2, coil_2);
 389   3          setBitInUint16(&send_reg[7], 3, coil_3);
 390   3          setBitInUint16(&send_reg[7], 4, coil_4);
 391   3          setBitInUint16(&send_reg[7], 5, auto_manual);
 392   3          setBitInUint16(&send_reg[7], 6, pwr_btn);
 393   3          auto_manual=(auto_manual>>5)&0x01;
 394   3          
 395   3          sys_write_vp(0x2075,(u16*)&btn_val,1);
*** WARNING C182 IN LINE 395 OF main.c: pointer to different objects
 396   3          sys_write_vp(0x2060,(u16*)&auto_manual,1);
*** WARNING C182 IN LINE 396 OF main.c: pointer to different objects
 397   3          
 398   3          modbus_requests((ModbusRequest*)&temp_request,send_reg,8);      
 399   3          sys_tick=IDLE_TIME;
 400   3             }
 401   2      
C51 COMPILER V9.53.0.0   MAIN                                                              03/20/2025 15:39:25 PAGE 8   

 402   2            polling_timer--;
 403   2            power_timer++;
 404   2          
 405   2          // –°–æ—Å—Ç–æ—è–Ω–∏–µ 1: –û–∂–∏–¥–∞–Ω–∏–µ –æ—Ç–≤–µ—Ç–∞
 406   2          if (polling_state == 1) {
 407   3              // –ï—Å–ª–∏ –ø–æ–ª—É—á–µ–Ω –æ—Ç–≤–µ—Ç
 408   3            
 409   3              if (rcv_complete==1) {
 410   4                  sys_write_vp(0x2042, "Received        \n", 9);      
 411   4                  // –ü–µ—Ä–µ—Ö–æ–¥ –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —É—Å—Ç—Ä–æ–π—Å—Ç–≤—É
 412   4                  current_device=current_device+1;
 413   4                  polling_state = 0;  // –í–æ–∑–≤—Ä–∞—Ç –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–∫–∏
 414   4                  rcv_complete=0;
 415   4                  polling_timer=POLLING_TIME;
 416   4                  sys_tick=IDLE_TIME;
 417   4              }
 418   3              // –ï—Å–ª–∏ –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è –∏—Å—Ç–µ–∫–ª–æ
 419   3               if (polling_timer ==0) {
 420   4                  // –õ–æ–≥–∏—Ä—É–µ–º —Ç–∞–π–º–∞—É—Ç (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
 421   4                  sys_write_vp(0x2042, "Timeout         \n", 9);
 422   4           
 423   4                  for(i=0;i<48;i++)
 424   4                  {
 425   5                    buff[i]=0;
 426   5                  }
 427   4                          
 428   4                  // –ü–µ—Ä–µ—Ö–æ–¥ –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —É—Å—Ç—Ä–æ–π—Å—Ç–≤—É
 429   4                  current_device=current_device+1;
 430   4                  polling_state = 0;  // –í–æ–∑–≤—Ä–∞—Ç –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–∫–∏
 431   4                  rcv_complete=0;
 432   4                  sys_tick=IDLE_TIME;
 433   4              }     
 434   3          } 
 435   2        }
 436   1          
 437   1      }
 438          
 439          
 440          
 441          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   3394    ----
   CONSTANT SIZE    =    268    ----
   XDATA SIZE       =   ----     208
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----     109
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  22 WARNING(S),  0 ERROR(S)
