C51 COMPILER V9.53.0.0   MAIN                                                              02/14/2025 11:41:55 PAGE 1   


C51 COMPILER V9.53.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN ..\OBJ\main.obj
COMPILER INVOKED BY: C:\Program Files (x86)\KEIL\C51\BIN\C51.EXE main.c LARGE OMF2 OPTIMIZE(3,SIZE) BROWSE INCDIR(..\USE
                    -R;..\FUNC_HANDLER;..\GUI_APP;..\HANDWARE\UART2) DEBUG PRINT(..\OBJ\main.lst) TABS(2) OBJECT(..\OBJ\main.obj)

line level    source

   1          #include "sys.h"
   2          #include "uart2.h"
   3          #include <string.h>
   4          extern  u8 modbus_addresses[5];     // –ê–¥—Ä–µ—Å–∞ —É—Å—Ç—Ä–æ–π—Å—Ç–≤
   5          extern  u16 start_reg;              // –ù–∞—á–∞–ª—å–Ω—ã–π —Ä–µ–≥–∏—Å—Ç—Ä
   6          extern  u16 num_reg;                // –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–µ–≥–∏—Å—Ç—Ä–æ–≤
   7          
   8          extern volatile u32 rcv_timer;
   9          extern volatile  u32 sys_tick;
  10          extern u8  uart2_step;
  11          
  12          #define FIRST_TXT    "DGUS Tool\0\0"
  13          #define TEST_TXT     "DGUS TEST TEXT\0\0"
  14          #define INT_TXT    "INERRUPT \0\0"
  15          #define WHILE_TXT    "WHILE___ \0\0"
  16          #define BOUDRATE 9600
  17          #define DEVICES 8
  18          #define BTN_VAL_ADDR 3000
  19          #define POLLING_TIME 160000
  20          
  21          void main(void)
  22          {   
  23   1      
  24   1      // –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –≤ `xdata`
  25   1      idata  ModbusRequest request[DEVICES] = {
  26   1          {0x1, 0x5,   0x0000, 0x0},   // –£—Å—Ç—Ä–æ–π—Å—Ç–≤–æ 1
  27   1          {0x2, 0x3,   0x0000, 0x4},   // –£—Å—Ç—Ä–æ–π—Å—Ç–≤–æ 2
  28   1          {0x2, 0x10,  0x0000, 0x1},  // –£—Å—Ç—Ä–æ–π—Å—Ç–≤–æ 3
  29   1          {0x3, 0x3,   0x0000, 0x1},   // –£—Å—Ç—Ä–æ–π—Å—Ç–≤–æ 4
  30   1          {0x4, 0x3,   0x0000, 0x1},   // –£—Å—Ç—Ä–æ–π—Å—Ç–≤–æ 5
  31   1          {0x5, 0x3,   0x0000, 0x1},   // –£—Å—Ç—Ä–æ–π—Å—Ç–≤–æ 6
  32   1          {0x6, 0x3,   0x0000, 0x1},    // –£—Å—Ç—Ä–æ–π—Å—Ç–≤–æ 7
  33   1          {0x7, 0x3,   0x0000, 0x1}    // –£—Å—Ç—Ä–æ–π—Å—Ç–≤–æ 8
  34   1      };
  35   1      
  36   1       idata  ModbusRequest temp_request;
  37   1        u8 send_buff[8]={0,};
  38   1        u32 polling_timer=0;                    // –¢–∞–π–º–µ—Ä –æ–∂–∏–¥–∞–Ω–∏—è –æ—Ç–≤–µ—Ç–∞
  39   1        u8 polling_state;                     // –°–æ—Å—Ç–æ—è–Ω–∏–µ –æ–ø—Ä–æ—Å–∞: 0 - –æ—Ç–ø—Ä–∞–≤–∫–∞, 1 - –æ–∂–
             -∏–¥–∞–Ω–∏–µ
  40   1        u16 len;
  41   1        u16 i;
  42   1        u8 buff[48]={0, };
  43   1        idata u16 send_reg[8]={0,0,0,0,0,0,0,0 };
  44   1        idata u16 btn_val;
  45   1        u16 pwm_width;
  46   1        u16 coil_1;
  47   1        u16 coil_2;
  48   1        u16 coil_3;
  49   1        u16 coil_4;
  50   1        
  51   1        u16 icon_1;
  52   1        u16 icon_2;
  53   1        u16 icon_3;
C51 COMPILER V9.53.0.0   MAIN                                                              02/14/2025 11:41:55 PAGE 2   

  54   1        u16 icon_4;
  55   1        u16 pwr_btn;
  56   1        u16 pwr_icon;
  57   1        u16 auto_manual;
  58   1        u16 recv_len;
  59   1        idata u8 command_value; 
  60   1        float temperature;
  61   1        float temperature_1;
  62   1        float temperature_2;
  63   1        float temperature_3;
  64   1        float temperature_4;
  65   1        u16 rawValue;
  66   1        xdata ModbusPacket receivedPacket;
  67   1        u16 freq;
  68   1        u16 rpm;
  69   1        u16 receive_cmd=0;
  70   1        xdata u16 receive_adr=0;
  71   1        
  72   1      
  73   1           xdata u16 result=0;  
  74   1           sys_init();//System initialization
  75   1           uart2_init(BOUDRATE);//Initialize serial port 2
  76   1           current_device = 0;
  77   1           polling_state=0;
  78   1           sys_tick=IDLE_TIME;
  79   1        
  80   1        
  81   1          
  82   1        while(1){   
  83   2            
  84   2          if((sys_tick==0)&&(polling_state == 1)&&(uart2_rx_sta)){uart2_rx_sta |= UART2_PACKET_OK; }; // –¢–∞–π–º–
             -∞—É—Ç –ø—Ä–µ—Ä—ã–≤–∞–Ω–∏—è –ø—Ä–∏—ë–º–∞ –¥–∞–Ω–Ω—ã—Ö 
  85   2                
  86   2          if(uart2_rx_sta & UART2_PACKET_OK)
  87   2          {
  88   3              
  89   3            len = uart2_rx_sta & UART2_PACKET_LEN;
  90   3              
  91   3            sys_write_vp(0x2069, (u16*)&len, 2);
*** WARNING C182 IN LINE 91 OF main.c: pointer to different objects
  92   3        
  93   3            recv_len = 0;
  94   3            for(i=0;i<len;i++)
  95   3            {
  96   4              recv_len += sprintf(buff+recv_len,"%02X ",(u16)uart2_buf[i]);
  97   4            }
  98   3            sys_write_vp(0x2010,"                                ",16);
  99   3            sys_write_vp(0x2010,buff,recv_len/2+2);
 100   3            for(i=0;i<48;i++)
 101   3            {
 102   4              buff[i]=0;
 103   4            }
 104   3            sys_tick=IDLE_TIME;
 105   3            result=parseModbusPacket(&uart2_buf,len,(ModbusPacket*)&receivedPacket);    
 106   3             sys_write_vp(0x2071, &result, 1);
*** WARNING C182 IN LINE 106 OF main.c: pointer to different objects
 107   3             if (result==1) {   
 108   4                   sys_write_vp(0x2096, "OK    \n", 4);
 109   4             
 110   4             switch (receivedPacket.rcv_address) {
 111   5      
 112   5                 case 0x01:    
C51 COMPILER V9.53.0.0   MAIN                                                              02/14/2025 11:41:55 PAGE 3   

 113   5                  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–ª–∏–Ω—É –¥–∞–Ω–Ω—ã—Ö
 114   5                          if (receivedPacket.rcv_dataLength >= 2) {
 115   6                              // –ò–∑–≤–ª–µ–∫–∞–µ–º –¥–∞–Ω–Ω—ã–µ (–ø–µ—Ä–≤—ã–π —Ä–µ–≥–∏—Å—Ç—Ä)
 116   6                              rawValue = (receivedPacket.rcv_data[0] << 8) | receivedPacket.rcv_data[1];
 117   6                              if (rawValue & 0x8000) { // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–Ω–∞–∫ —á–∏—Å–ª–∞
 118   7                                  rawValue = rawValue - 65536; // –û—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
 119   7                              }
 120   6                             temperature = rawValue / 10.0; // –ú–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–∏–µ
 121   6                             sys_write_vp(0x2005,(u8*)&temperature,2);  
 122   6                             rawValue = 0;                      
 123   6                             } else {
 124   6                            
 125   6                              }
 126   5                          break;
 127   5                              
 128   5                  case 0x02:            
 129   5                        
 130   5      
 131   5                       if (receivedPacket.rcv_dataLength >= 2) {
 132   6                            
 133   6                          // –ò–∑–≤–ª–µ–∫–∞–µ–º –¥–∞–Ω–Ω—ã–µ (–ø–µ—Ä–≤—ã–π —Ä–µ–≥–∏—Å—Ç—Ä)
 134   6                             freq = (receivedPacket.rcv_data[0] << 8) | receivedPacket.rcv_data[1];  
 135   6                             rpm =(receivedPacket.rcv_data[4] << 8) | receivedPacket.rcv_data[5];
 136   6                              sys_write_vp(0x2081,(u16*)&rpm,1);  
*** WARNING C182 IN LINE 136 OF main.c: pointer to different objects
 137   6                              sys_write_vp(0x2007,(u16*)&freq,2);     
*** WARNING C182 IN LINE 137 OF main.c: pointer to different objects
 138   6                             } else {
 139   6                                sys_write_vp(0x2096, "DATA_ERR\n", 6);
 140   6                               
 141   6                               break;
 142   6                              }
 143   5                          break;               
 144   5                 
 145   5                    case 0x03:     
 146   5                    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–ª–∏–Ω—É –¥–∞–Ω–Ω—ã—Ö
 147   5                          if (receivedPacket.rcv_dataLength >= 2) {
 148   6                              // –ò–∑–≤–ª–µ–∫–∞–µ–º –¥–∞–Ω–Ω—ã–µ (–ø–µ—Ä–≤—ã–π —Ä–µ–≥–∏—Å—Ç—Ä)
 149   6                              rawValue = (receivedPacket.rcv_data[0] << 8) | receivedPacket.rcv_data[1];
 150   6                              if (rawValue & 0x8000) { // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–Ω–∞–∫ —á–∏—Å–ª–∞
 151   7                                  rawValue = rawValue - 65536; // –û—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
 152   7                              }
 153   6                             temperature_1 = rawValue / 10.0; // –ú–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–∏–µ
 154   6                             sys_write_vp(0x2085,(u8*)&temperature_1,2);  
 155   6                             rawValue = 0;                        
 156   6                             } else {
 157   6                            
 158   6                              }
 159   5                          break;                    
 160   5                              
 161   5                              
 162   5                        case 0x04:     
 163   5                        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–ª–∏–Ω—É –¥–∞–Ω–Ω—ã—Ö
 164   5                          if (receivedPacket.rcv_dataLength >= 2) {
 165   6                              // –ò–∑–≤–ª–µ–∫–∞–µ–º –¥–∞–Ω–Ω—ã–µ (–ø–µ—Ä–≤—ã–π —Ä–µ–≥–∏—Å—Ç—Ä)
 166   6                              rawValue = (receivedPacket.rcv_data[0] << 8) | receivedPacket.rcv_data[1];
 167   6                              if (rawValue & 0x8000) { // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–Ω–∞–∫ —á–∏—Å–ª–∞
 168   7                                  rawValue = rawValue - 65536; // –û—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
 169   7                              }
 170   6                             temperature_2 = rawValue / 10.0; // –ú–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–∏–µ
 171   6                             sys_write_vp(0x2087,(u8*)&temperature_2,2);  
 172   6                             rawValue = 0;                        
C51 COMPILER V9.53.0.0   MAIN                                                              02/14/2025 11:41:55 PAGE 4   

 173   6                             } else {
 174   6                            
 175   6                              }
 176   5                          break;                    
 177   5                              
 178   5                              
 179   5                        case 0x05:     
 180   5                        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–ª–∏–Ω—É –¥–∞–Ω–Ω—ã—Ö
 181   5                          if (receivedPacket.rcv_dataLength >= 2) {
 182   6                              // –ò–∑–≤–ª–µ–∫–∞–µ–º –¥–∞–Ω–Ω—ã–µ (–ø–µ—Ä–≤—ã–π —Ä–µ–≥–∏—Å—Ç—Ä)
 183   6                              rawValue = (receivedPacket.rcv_data[0] << 8) | receivedPacket.rcv_data[1];
 184   6                              if (rawValue & 0x8000) { // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–Ω–∞–∫ —á–∏—Å–ª–∞
 185   7                                  rawValue = rawValue - 65536; // –û—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
 186   7                              }
 187   6                             temperature_3 = rawValue / 10.0; // –ú–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–∏–µ
 188   6                             sys_write_vp(0x2089,(u8*)&temperature_3,2);  
 189   6                             rawValue = 0;                        
 190   6                             } else {
 191   6                            
 192   6                              }
 193   5                          break;              
 194   5      
 195   5                        case 0x06:     
 196   5                        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–ª–∏–Ω—É –¥–∞–Ω–Ω—ã—Ö
 197   5                          if (receivedPacket.rcv_dataLength >= 2) {
 198   6                              // –ò–∑–≤–ª–µ–∫–∞–µ–º –¥–∞–Ω–Ω—ã–µ (–ø–µ—Ä–≤—ã–π —Ä–µ–≥–∏—Å—Ç—Ä)
 199   6                              rawValue = (receivedPacket.rcv_data[0] << 8) | receivedPacket.rcv_data[1];
 200   6                              if (rawValue & 0x8000) { // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–Ω–∞–∫ —á–∏—Å–ª–∞
 201   7                                  rawValue = rawValue - 65536; // –û—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
 202   7                              }
 203   6                             temperature_4 = rawValue / 10.0; // –ú–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–∏–µ
 204   6                             sys_write_vp(0x2091,(u8*)&temperature_4,2);  
 205   6                             rawValue = 0;                        
 206   6                             } else {
 207   6                            
 208   6                              }
 209   5                          break;  
 210   5      
 211   5                       case 0x07:    
 212   5                       // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–ª–∏–Ω—É –¥–∞–Ω–Ω—ã—Ö
 213   5                          if (receivedPacket.rcv_dataLength >= 2) {
 214   6                              // –ò–∑–≤–ª–µ–∫–∞–µ–º –¥–∞–Ω–Ω—ã–µ (–ø–µ—Ä–≤—ã–π —Ä–µ–≥–∏—Å—Ç—Ä)
 215   6                              rawValue = (receivedPacket.rcv_data[0] << 8) | receivedPacket.rcv_data[1];
 216   6                              if (rawValue & 0x8000) { // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–Ω–∞–∫ —á–∏—Å–ª–∞
 217   7                                  rawValue = rawValue - 65536; // –û—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
 218   7                              }
 219   6                             temperature = rawValue / 10.0; // –ú–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–∏–µ
 220   6                             sys_write_vp(0x2005,(u8*)&temperature,2);  
 221   6                             rawValue = 0;                      
 222   6                             } else {
 223   6                            
 224   6                              }
 225   5                          break;
 226   5                                                      
 227   5                                        
 228   5                              
 229   5                    default:
 230   5                  break;
 231   5             }
 232   4             
 233   4             
 234   4             
C51 COMPILER V9.53.0.0   MAIN                                                              02/14/2025 11:41:55 PAGE 5   

 235   4             
 236   4             }else if (result == 99) {
 237   4                  sys_write_vp(0x2096, "Lenght\n", 4);
 238   4               sys_delay_ms(20);
 239   4               uart2_rx_sta = 0;
 240   4                uart2_reset(BOUDRATE);
 241   4              }else if (result == 98) {
 242   4                  sys_write_vp(0x2096, "CRC   \n", 4);
 243   4                sys_delay_ms(20);
 244   4                uart2_rx_sta = 0;
 245   4                   uart2_reset(BOUDRATE);
 246   4              }else {
 247   4                  sys_write_vp(0x2096, "ERROR\n", 4);
 248   4                sys_delay_ms(20);
 249   4                uart2_rx_sta = 0;
 250   4                 uart2_reset(BOUDRATE);
 251   4              }
 252   3              
 253   3              uart2_rx_sta = 0;
 254   3              len=0;
 255   3             
 256   3             for(i=0;i<UART2_PACKET_MAX_LEN;i++)
 257   3            {
 258   4              uart2_buf[i]=0;
 259   4            }
 260   3                 
 261   3            rcv_complete=1;
 262   3          }
 263   2         
 264   2          
 265   2        
 266   2          
 267   2      if (polling_state==0) {
 268   3             if (current_device >= DEVICES) {
 269   4                 current_device = 0; // –°–±—Ä–∞—Å—ã–≤–∞–µ–º –∏–Ω–¥–µ–∫—Å, –µ—Å–ª–∏ –æ–Ω –≤—ã—Ö–æ–¥–∏—Ç –∑–∞ –≥—
             -Ä–∞–Ω–∏—Ü—ã
 270   4                }
 271   3        
 272   3                
 273   3          sys_delay_ms(15);
 274   3          temp_request = request[current_device];
 275   3          sys_write_vp(0x2000,(u8*)&current_device,1);
 276   3          command_value = temp_request.command; // –ü—Ä–∏—Å–≤–∞–∏–≤–∞–Ω–∏–µ –∑–Ω–∞—á–µ–Ω–∏—è
 277   3          sys_write_vp(0x2001, &temp_request.command, 1); // –ó–∞–ø–∏—Å—å –∑–Ω–∞—á–µ–Ω–∏—è –∫–æ–º–∞–Ω–¥—ã
*** WARNING C182 IN LINE 277 OF main.c: pointer to different objects
 278   3          sys_write_vp(0x2002, &temp_request.start_register, 1); // –ó–∞–ø–∏—Å—å –ø–µ—Ä–≤–æ–≥–æ —Ä–µ–≥–∏—Å—Ç—Ä–∞
*** WARNING C182 IN LINE 278 OF main.c: pointer to different objects
 279   3                
 280   3          if(command_value==0x03){      
 281   4          data_len=(temp_request.num_registers * 2)+5;  }
 282   3          
 283   3          if(command_value==0x10){      
 284   4          data_len=8;}
 285   3          
 286   3          if(command_value==0x5){     
 287   4          data_len=8;}
 288   3          
 289   3          if(command_value==0x6){     
 290   4          data_len=8;}
 291   3          
 292   3          sys_write_vp(0x2003,(u16*)&data_len, 2);  
*** WARNING C182 IN LINE 292 OF main.c: pointer to different objects
C51 COMPILER V9.53.0.0   MAIN                                                              02/14/2025 11:41:55 PAGE 6   

 293   3          sys_write_vp(0x2004, &temp_request.address, 1);
*** WARNING C182 IN LINE 293 OF main.c: pointer to different objects
 294   3          polling_timer=POLLING_TIME; 
 295   3          polling_state=1;
 296   3          
 297   3          
 298   3          
 299   3          btn_val=0;
 300   3          sys_read_vp(0x2079,(u16*)&btn_val,1);
*** WARNING C182 IN LINE 300 OF main.c: pointer to different objects
 301   3          sys_read_vp(0x2064,(u16*)&pwm_width,1);
*** WARNING C182 IN LINE 301 OF main.c: pointer to different objects
 302   3          sys_read_vp(0x2073,(u16*)&freq,1);
*** WARNING C182 IN LINE 302 OF main.c: pointer to different objects
 303   3          
 304   3          send_reg[0]=pwm_width;
 305   3          send_reg[1]=pwm_width;
 306   3          send_reg[2]=pwm_width;
 307   3          send_reg[3]=pwm_width;
 308   3          send_reg[4]=freq;
 309   3          
 310   3          coil_1=btn_val&0x2;
 311   3          coil_2=btn_val&0x4;
 312   3          coil_3=btn_val&0x8;
 313   3          coil_4=btn_val&0x10;
 314   3          auto_manual=btn_val&0x20;
 315   3          pwr_btn=btn_val&0x40;
 316   3          
 317   3          icon_1=(coil_1>>1)&0x01;
 318   3          icon_2=(coil_2>>2)&0x01;
 319   3          icon_3=(coil_3>>3)&0x01;
 320   3          icon_4=(coil_4>>4)&0x01;
 321   3          pwr_icon=(pwr_btn>>6)&0x01;
 322   3          sys_write_vp(0x2105,(u16*)&icon_1,1);
*** WARNING C182 IN LINE 322 OF main.c: pointer to different objects
 323   3          sys_write_vp(0x2107,(u16*)&icon_2,1);
*** WARNING C182 IN LINE 323 OF main.c: pointer to different objects
 324   3          sys_write_vp(0x2109,(u16*)&icon_3,1);
*** WARNING C182 IN LINE 324 OF main.c: pointer to different objects
 325   3          sys_write_vp(0x2111,(u16*)&icon_4,1);
*** WARNING C182 IN LINE 325 OF main.c: pointer to different objects
 326   3          sys_write_vp(0x2113,(u16*)&pwr_icon,1);
*** WARNING C182 IN LINE 326 OF main.c: pointer to different objects
 327   3          
 328   3          if(pwr_icon==1){
 329   4          request[0].num_registers = 0xFF00;
 330   4          
 331   4          }
 332   3        
 333   3          if(pwr_icon==0){
 334   4          request[0].num_registers = 0x0000;
 335   4          
 336   4          }
 337   3          
 338   3          btn_val&= 0x01;
 339   3          setBitInUint16(&send_reg[7], 0, btn_val);
 340   3          setBitInUint16(&send_reg[7], 1, coil_1);
 341   3          setBitInUint16(&send_reg[7], 2, coil_2);
 342   3          setBitInUint16(&send_reg[7], 3, coil_3);
 343   3          setBitInUint16(&send_reg[7], 4, coil_4);
 344   3          setBitInUint16(&send_reg[7], 5, auto_manual);
 345   3          setBitInUint16(&send_reg[7], 6, pwr_btn);
C51 COMPILER V9.53.0.0   MAIN                                                              02/14/2025 11:41:55 PAGE 7   

 346   3          auto_manual=(auto_manual>>5)&0x01;
 347   3          
 348   3          sys_write_vp(0x2075,(u16*)&btn_val,1);
*** WARNING C182 IN LINE 348 OF main.c: pointer to different objects
 349   3          sys_write_vp(0x2060,(u16*)&auto_manual,1);
*** WARNING C182 IN LINE 349 OF main.c: pointer to different objects
 350   3          
 351   3          modbus_requests((ModbusRequest*)&temp_request,send_reg,8);      
 352   3          sys_tick=IDLE_TIME;
 353   3             }
 354   2      
 355   2            polling_timer--;
 356   2          
 357   2          
 358   2          // –°–æ—Å—Ç–æ—è–Ω–∏–µ 1: –û–∂–∏–¥–∞–Ω–∏–µ –æ—Ç–≤–µ—Ç–∞
 359   2          if (polling_state == 1) {
 360   3              // –ï—Å–ª–∏ –ø–æ–ª—É—á–µ–Ω –æ—Ç–≤–µ—Ç
 361   3            
 362   3              if (rcv_complete==1) {
 363   4                  sys_write_vp(0x2042, "Received        \n", 9);      
 364   4                  // –ü–µ—Ä–µ—Ö–æ–¥ –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —É—Å—Ç—Ä–æ–π—Å—Ç–≤—É
 365   4                  current_device=current_device+1;
 366   4                  polling_state = 0;  // –í–æ–∑–≤—Ä–∞—Ç –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–∫–∏
 367   4                  rcv_complete=0;
 368   4                  polling_timer=POLLING_TIME;
 369   4                  sys_tick=IDLE_TIME;
 370   4              }
 371   3              // –ï—Å–ª–∏ –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è –∏—Å—Ç–µ–∫–ª–æ
 372   3               if (polling_timer ==0) {
 373   4                  // –õ–æ–≥–∏—Ä—É–µ–º —Ç–∞–π–º–∞—É—Ç (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
 374   4                  sys_write_vp(0x2042, "Timeout         \n", 9);
 375   4           
 376   4                  for(i=0;i<48;i++)
 377   4                  {
 378   5                    buff[i]=0;
 379   5                  }
 380   4                  
 381   4                  
 382   4                  
 383   4                  // –ü–µ—Ä–µ—Ö–æ–¥ –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —É—Å—Ç—Ä–æ–π—Å—Ç–≤—É
 384   4                  current_device=current_device+1;
 385   4                  polling_state = 0;  // –í–æ–∑–≤—Ä–∞—Ç –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–∫–∏
 386   4                  rcv_complete=0;
 387   4                  sys_tick=IDLE_TIME;
 388   4              }     
 389   3          } 
 390   2        }
 391   1          
 392   1      }
 393          
 394          
 395          
 396          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   3005    ----
   CONSTANT SIZE    =    252    ----
   XDATA SIZE       =   ----     193
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----      91
C51 COMPILER V9.53.0.0   MAIN                                                              02/14/2025 11:41:55 PAGE 8   

   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  18 WARNING(S),  0 ERROR(S)
