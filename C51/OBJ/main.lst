C51 COMPILER V9.53.0.0   MAIN                                                              03/20/2025 10:48:04 PAGE 1   


C51 COMPILER V9.53.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN ..\OBJ\main.obj
COMPILER INVOKED BY: C:\Program Files (x86)\KEIL\C51\BIN\C51.EXE main.c LARGE OMF2 OPTIMIZE(3,SIZE) BROWSE INCDIR(..\USE
                    -R;..\FUNC_HANDLER;..\GUI_APP;..\HANDWARE\UART2) DEBUG PRINT(..\OBJ\main.lst) TABS(2) OBJECT(..\OBJ\main.obj)

line level    source

   1          #include "sys.h"
   2          #include "uart2.h"
   3          #include <string.h>
   4          extern  u8 modbus_addresses[5];     // –ê–¥—Ä–µ—Å–∞ —É—Å—Ç—Ä–æ–π—Å—Ç–≤
   5          extern  u16 start_reg;              // –ù–∞—á–∞–ª—å–Ω—ã–π —Ä–µ–≥–∏—Å—Ç—Ä
   6          extern  u16 num_reg;                // –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–µ–≥–∏—Å—Ç—Ä–æ–≤
   7          
   8          extern volatile u32 rcv_timer;
   9          extern volatile  u32 sys_tick;
  10          extern u8  uart2_step;
  11          
  12          #define FIRST_TXT    "DGUS Tool\0\0"
  13          #define TEST_TXT     "DGUS TEST TEXT\0\0"
  14          #define INT_TXT    "INERRUPT \0\0"
  15          #define WHILE_TXT    "WHILE___ \0\0"
  16          #define BOUDRATE 9600
  17          #define DEVICES 8
  18          #define BTN_VAL_ADDR 3000
  19          #define POLLING_TIME 160000
  20          #define POWER_TIME 900000
  21          
  22          void main(void)
  23          {   
  24   1      
  25   1      // –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –≤ `xdata`
  26   1      idata  ModbusRequest request[DEVICES] = {
  27   1          {0x1, 0x5,   0x0000, 0x0,0x0000},   // –£—Å—Ç—Ä–æ–π—Å—Ç–≤–æ 1
  28   1          {0x2, 0x3,   0x0000, 0x4,0x0000},   // –£—Å—Ç—Ä–æ–π—Å—Ç–≤–æ 2
  29   1          {0x2, 0x10,  0x0000, 0x1,0x0000},   // –£—Å—Ç—Ä–æ–π—Å—Ç–≤–æ 3
  30   1          {0x3, 0x3,   0x0000, 0x1,0x0000},   // –£—Å—Ç—Ä–æ–π—Å—Ç–≤–æ 4
  31   1          {0x4, 0x3,   0x0000, 0x1,0x0000},   // –£—Å—Ç—Ä–æ–π—Å—Ç–≤–æ 5
  32   1          {0x5, 0x3,   0x0000, 0x1,0x0000},   // –£—Å—Ç—Ä–æ–π—Å—Ç–≤–æ 6
  33   1          {0x6, 0x3,   0x0000, 0x1,0x0000},   // –£—Å—Ç—Ä–æ–π—Å—Ç–≤–æ 7
  34   1          {0x7, 0x3,   0x0000, 0x1,0x0000}    // –£—Å—Ç—Ä–æ–π—Å—Ç–≤–æ 8
  35   1      };
  36   1      
  37   1       idata  ModbusRequest temp_request;
  38   1        u8 send_buff[8]={0,};
  39   1        u32 polling_timer=0;                    // –¢–∞–π–º–µ—Ä –æ–∂–∏–¥–∞–Ω–∏—è –æ—Ç–≤–µ—Ç–∞
  40   1        u8 polling_state;                     // –°–æ—Å—Ç–æ—è–Ω–∏–µ –æ–ø—Ä–æ—Å–∞: 0 - –æ—Ç–ø—Ä–∞–≤–∫–∞, 1 - –æ–∂–
             -∏–¥–∞–Ω–∏–µ
  41   1        u8 power_delay;
  42   1        u32 power_timer;
  43   1        u16 len;
  44   1        u16 i;
  45   1        u8 buff[48]={0, };
  46   1        idata u16 send_reg[8]={0,0,0,0,0,0,0,0 };
  47   1        idata u16 btn_val;
  48   1        u16 pwm_width;
  49   1        u16 coil_1;
  50   1        u16 coil_2;
  51   1        u16 coil_3;
  52   1        u16 coil_4;
  53   1        
C51 COMPILER V9.53.0.0   MAIN                                                              03/20/2025 10:48:04 PAGE 2   

  54   1        u16 icon_1;
  55   1        u16 icon_2;
  56   1        u16 icon_3;
  57   1        u16 icon_4;
  58   1        u16 pwr_btn;
  59   1        u16 pwr_icon;
  60   1        u16 auto_manual;
  61   1        u16 recv_len;
  62   1        idata u8 command_value; 
  63   1        float temperature;
  64   1        float temperature_1;
  65   1        float temperature_2;
  66   1        float temperature_3;
  67   1        float temperature_4;
  68   1        u16 rawValue;
  69   1        xdata ModbusPacket receivedPacket;
  70   1        u16 freq;
  71   1        u16 rpm;
  72   1        u16 tim_arr;
  73   1        u16 pwm;
  74   1        u16 receive_cmd=0;
  75   1        xdata u16 receive_adr=0;
  76   1        
  77   1      
  78   1           xdata u16 result=0;  
  79   1           sys_init();//System initialization
  80   1           uart2_init(BOUDRATE);//Initialize serial port 2
  81   1           current_device = 0;
  82   1           polling_state=0;
  83   1           sys_tick=IDLE_TIME;
  84   1           power_delay=0;
  85   1           power_timer=0;
  86   1          
  87   1        while(1){   
  88   2            
  89   2          if((sys_tick==0)&&(polling_state == 1)&&(uart2_rx_sta)){uart2_rx_sta |= UART2_PACKET_OK; }; // –¢–∞–π–º–
             -∞—É—Ç –ø—Ä–µ—Ä—ã–≤–∞–Ω–∏—è –ø—Ä–∏—ë–º–∞ –¥–∞–Ω–Ω—ã—Ö 
  90   2                
  91   2          if(uart2_rx_sta & UART2_PACKET_OK)
  92   2          {
  93   3              
  94   3            len = uart2_rx_sta & UART2_PACKET_LEN;
  95   3              
  96   3            sys_write_vp(0x2069, (u16*)&len, 2);
*** WARNING C182 IN LINE 96 OF main.c: pointer to different objects
  97   3        
  98   3            recv_len = 0;
  99   3            for(i=0;i<len;i++)
 100   3            {
 101   4              recv_len += sprintf(buff+recv_len,"%02X ",(u16)uart2_buf[i]);
 102   4            }
 103   3            sys_write_vp(0x2010,"                                ",16);
 104   3            sys_write_vp(0x2010,buff,recv_len/2+2);
 105   3            for(i=0;i<48;i++)
 106   3            {
 107   4              buff[i]=0;
 108   4            }
 109   3            sys_tick=IDLE_TIME;
 110   3            result=parseModbusPacket(&uart2_buf,len,(ModbusPacket*)&receivedPacket);    
 111   3             sys_write_vp(0x2071, &result, 1);
*** WARNING C182 IN LINE 111 OF main.c: pointer to different objects
 112   3             if (result==1) {   
C51 COMPILER V9.53.0.0   MAIN                                                              03/20/2025 10:48:04 PAGE 3   

 113   4                   sys_write_vp(0x2096, "OK    \n", 4);
 114   4             
 115   4             switch (receivedPacket.rcv_address) {
 116   5      
 117   5                 case 0x01:    
 118   5                  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–ª–∏–Ω—É –¥–∞–Ω–Ω—ã—Ö
 119   5                     /*     if (receivedPacket.rcv_dataLength >= 2) {
 120   5                              // –ò–∑–≤–ª–µ–∫–∞–µ–º –¥–∞–Ω–Ω—ã–µ (–ø–µ—Ä–≤—ã–π —Ä–µ–≥–∏—Å—Ç—Ä)
 121   5                              rawValue = (receivedPacket.rcv_data[0] << 8) | receivedPacket.rcv_data[1];
 122   5                              if (rawValue & 0x8000) { // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–Ω–∞–∫ —á–∏—Å–ª–∞
 123   5                                  rawValue = rawValue - 65536; // –û—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
 124   5                              }
 125   5                             temperature = rawValue / 10.0; // –ú–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–∏–µ
 126   5                             sys_write_vp(0x2005,(u8*)&temperature,2);  
 127   5                             rawValue = 0;                      
 128   5                             } else {
 129   5                            
 130   5                              } */
 131   5                          break;
 132   5                              
 133   5                  case 0x02:            
 134   5                        
 135   5      
 136   5                       if (receivedPacket.rcv_dataLength >= 2) {
 137   6                            
 138   6                          // –ò–∑–≤–ª–µ–∫–∞–µ–º –¥–∞–Ω–Ω—ã–µ (–ø–µ—Ä–≤—ã–π —Ä–µ–≥–∏—Å—Ç—Ä)
 139   6                             freq = (receivedPacket.rcv_data[0] << 8) | receivedPacket.rcv_data[1];  
 140   6                             rpm =(receivedPacket.rcv_data[4] << 8) | receivedPacket.rcv_data[5];
 141   6                         tim_arr =(receivedPacket.rcv_data[6] << 8) | receivedPacket.rcv_data[7];
 142   6                             pwm =(receivedPacket.rcv_data[8] << 8) | receivedPacket.rcv_data[9];
 143   6                              sys_write_vp(0x2081,(u16*)&rpm,1);  
*** WARNING C182 IN LINE 143 OF main.c: pointer to different objects
 144   6                              sys_write_vp(0x2007,(u16*)&freq,2);     
*** WARNING C182 IN LINE 144 OF main.c: pointer to different objects
 145   6                             } else {
 146   6                                sys_write_vp(0x2096, "DATA_ERR\n", 6);
 147   6                               
 148   6                               break;
 149   6                              }
 150   5                          break;               
 151   5                 
 152   5                    case 0x03:     
 153   5                    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–ª–∏–Ω—É –¥–∞–Ω–Ω—ã—Ö
 154   5                          if (receivedPacket.rcv_dataLength >= 2) {
 155   6                              // –ò–∑–≤–ª–µ–∫–∞–µ–º –¥–∞–Ω–Ω—ã–µ (–ø–µ—Ä–≤—ã–π —Ä–µ–≥–∏—Å—Ç—Ä)
 156   6                              rawValue = (receivedPacket.rcv_data[0] << 8) | receivedPacket.rcv_data[1];
 157   6                              if (rawValue & 0x8000) { // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–Ω–∞–∫ —á–∏—Å–ª–∞
 158   7                                  rawValue = rawValue - 65536; // –û—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
 159   7                              }
 160   6                             temperature_1 = rawValue / 10.0; // –ú–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–∏–µ
 161   6                             sys_write_vp(0x2085,(u8*)&temperature_1,2);  
 162   6                             rawValue = 0;                        
 163   6                             } else {
 164   6                            
 165   6                              }
 166   5                          break;                    
 167   5                              
 168   5                              
 169   5                        case 0x04:     
 170   5                        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–ª–∏–Ω—É –¥–∞–Ω–Ω—ã—Ö
 171   5                          if (receivedPacket.rcv_dataLength >= 2) {
 172   6                              // –ò–∑–≤–ª–µ–∫–∞–µ–º –¥–∞–Ω–Ω—ã–µ (–ø–µ—Ä–≤—ã–π —Ä–µ–≥–∏—Å—Ç—Ä)
C51 COMPILER V9.53.0.0   MAIN                                                              03/20/2025 10:48:04 PAGE 4   

 173   6                              rawValue = (receivedPacket.rcv_data[0] << 8) | receivedPacket.rcv_data[1];
 174   6                              if (rawValue & 0x8000) { // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–Ω–∞–∫ —á–∏—Å–ª–∞
 175   7                                  rawValue = rawValue - 65536; // –û—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
 176   7                              }
 177   6                             temperature_2 = rawValue / 10.0; // –ú–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–∏–µ
 178   6                             sys_write_vp(0x2087,(u8*)&temperature_2,2);  
 179   6                             rawValue = 0;                        
 180   6                             } else {
 181   6                            
 182   6                              }
 183   5                          break;                    
 184   5                              
 185   5                              
 186   5                        case 0x05:     
 187   5                        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–ª–∏–Ω—É –¥–∞–Ω–Ω—ã—Ö
 188   5                          if (receivedPacket.rcv_dataLength >= 2) {
 189   6                              // –ò–∑–≤–ª–µ–∫–∞–µ–º –¥–∞–Ω–Ω—ã–µ (–ø–µ—Ä–≤—ã–π —Ä–µ–≥–∏—Å—Ç—Ä)
 190   6                              rawValue = (receivedPacket.rcv_data[0] << 8) | receivedPacket.rcv_data[1];
 191   6                              if (rawValue & 0x8000) { // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–Ω–∞–∫ —á–∏—Å–ª–∞
 192   7                                  rawValue = rawValue - 65536; // –û—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
 193   7                              }
 194   6                             temperature_3 = rawValue / 10.0; // –ú–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–∏–µ
 195   6                             sys_write_vp(0x2089,(u8*)&temperature_3,2);  
 196   6                             rawValue = 0;                        
 197   6                             } else {
 198   6                            
 199   6                              }
 200   5                          break;              
 201   5      
 202   5                        case 0x06:     
 203   5                        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–ª–∏–Ω—É –¥–∞–Ω–Ω—ã—Ö
 204   5                          if (receivedPacket.rcv_dataLength >= 2) {
 205   6                              // –ò–∑–≤–ª–µ–∫–∞–µ–º –¥–∞–Ω–Ω—ã–µ (–ø–µ—Ä–≤—ã–π —Ä–µ–≥–∏—Å—Ç—Ä)
 206   6                              rawValue = (receivedPacket.rcv_data[0] << 8) | receivedPacket.rcv_data[1];
 207   6                              if (rawValue & 0x8000) { // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–Ω–∞–∫ —á–∏—Å–ª–∞
 208   7                                  rawValue = rawValue - 65536; // –û—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
 209   7                              }
 210   6                             temperature_4 = rawValue / 10.0; // –ú–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–∏–µ
 211   6                             sys_write_vp(0x2091,(u8*)&temperature_4,2);  
 212   6                             rawValue = 0;                        
 213   6                             } else {
 214   6                            
 215   6                              }
 216   5                          break;  
 217   5      
 218   5                       case 0x07:    
 219   5                       // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–ª–∏–Ω—É –¥–∞–Ω–Ω—ã—Ö
 220   5                          if (receivedPacket.rcv_dataLength >= 2) {
 221   6                              // –ò–∑–≤–ª–µ–∫–∞–µ–º –¥–∞–Ω–Ω—ã–µ (–ø–µ—Ä–≤—ã–π —Ä–µ–≥–∏—Å—Ç—Ä)
 222   6                              rawValue = (receivedPacket.rcv_data[0] << 8) | receivedPacket.rcv_data[1];
 223   6                              if (rawValue & 0x8000) { // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–Ω–∞–∫ —á–∏—Å–ª–∞
 224   7                                  rawValue = rawValue - 65536; // –û—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
 225   7                              }
 226   6                             temperature = rawValue / 10.0; // –ú–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–∏–µ
 227   6                             sys_write_vp(0x2005,(u8*)&temperature,2);  
 228   6                             rawValue = 0;                      
 229   6                             } else {
 230   6                            
 231   6                              }
 232   5                          break;
 233   5                                                      
 234   5                                        
C51 COMPILER V9.53.0.0   MAIN                                                              03/20/2025 10:48:04 PAGE 5   

 235   5                              
 236   5                    default:
 237   5                  break;
 238   5             }
 239   4             
 240   4             
 241   4             
 242   4             
 243   4             }else if (result == 99) {
 244   4                  sys_write_vp(0x2096, "Lenght\n", 4);
 245   4               sys_delay_ms(20);
 246   4               uart2_rx_sta = 0;
 247   4                uart2_reset(BOUDRATE);
 248   4              }else if (result == 98) {
 249   4                  sys_write_vp(0x2096, "CRC   \n", 4);
 250   4                sys_delay_ms(20);
 251   4                uart2_rx_sta = 0;
 252   4                   uart2_reset(BOUDRATE);
 253   4              }else {
 254   4                  sys_write_vp(0x2096, "ERROR\n", 4);
 255   4                sys_delay_ms(20);
 256   4                uart2_rx_sta = 0;
 257   4                 uart2_reset(BOUDRATE);
 258   4              }
 259   3              
 260   3              uart2_rx_sta = 0;
 261   3              len=0;
 262   3             
 263   3             for(i=0;i<UART2_PACKET_MAX_LEN;i++)
 264   3            {
 265   4              uart2_buf[i]=0;
 266   4            }
 267   3                 
 268   3            rcv_complete=1;
 269   3          }
 270   2         
 271   2          
 272   2        
 273   2          
 274   2      if (polling_state==0) {
 275   3             if (current_device >= DEVICES) {
 276   4                 current_device = 0; // –°–±—Ä–∞—Å—ã–≤–∞–µ–º –∏–Ω–¥–µ–∫—Å, –µ—Å–ª–∏ –æ–Ω –≤—ã—Ö–æ–¥–∏—Ç –∑–∞ –≥—
             -Ä–∞–Ω–∏—Ü—ã
 277   4                }
 278   3        
 279   3                
 280   3          sys_delay_ms(15);
 281   3          temp_request = request[current_device];
 282   3          sys_write_vp(0x2000,(u8*)&current_device,1);
 283   3          command_value = temp_request.command; // –ü—Ä–∏—Å–≤–∞–∏–≤–∞–Ω–∏–µ –∑–Ω–∞—á–µ–Ω–∏—è
 284   3          sys_write_vp(0x2001, &temp_request.command, 1); // –ó–∞–ø–∏—Å—å –∑–Ω–∞—á–µ–Ω–∏—è –∫–æ–º–∞–Ω–¥—ã
*** WARNING C182 IN LINE 284 OF main.c: pointer to different objects
 285   3          sys_write_vp(0x2002, &temp_request.start_register, 1); // –ó–∞–ø–∏—Å—å –ø–µ—Ä–≤–æ–≥–æ —Ä–µ–≥–∏—Å—Ç—Ä–∞
*** WARNING C182 IN LINE 285 OF main.c: pointer to different objects
 286   3                
 287   3          if(command_value==0x03){      
 288   4          data_len=(temp_request.num_registers * 2)+5;  }
 289   3          
 290   3          if(command_value==0x10){      
 291   4          data_len=8;}
 292   3          
 293   3          if(command_value==0x5){     
C51 COMPILER V9.53.0.0   MAIN                                                              03/20/2025 10:48:04 PAGE 6   

 294   4          data_len=8;}
 295   3          
 296   3          if(command_value==0x6){     
 297   4          data_len=8;}
 298   3          
 299   3          if(command_value==0x0F){      
 300   4          data_len=8;}
 301   3          
 302   3          sys_write_vp(0x2003,(u16*)&data_len, 2);  
*** WARNING C182 IN LINE 302 OF main.c: pointer to different objects
 303   3          sys_write_vp(0x2004, &temp_request.address, 1);
*** WARNING C182 IN LINE 303 OF main.c: pointer to different objects
 304   3          polling_timer=POLLING_TIME; 
 305   3          polling_state=1;
 306   3          
 307   3          
 308   3          
 309   3          btn_val=0;
 310   3          sys_read_vp(0x2079,(u16*)&btn_val,1);
*** WARNING C182 IN LINE 310 OF main.c: pointer to different objects
 311   3          sys_read_vp(0x2064,(u16*)&pwm_width,1);
*** WARNING C182 IN LINE 311 OF main.c: pointer to different objects
 312   3          sys_read_vp(0x2073,(u16*)&freq,1);
*** WARNING C182 IN LINE 312 OF main.c: pointer to different objects
 313   3          
 314   3          send_reg[0]=pwm_width;
 315   3          send_reg[1]=pwm_width;
 316   3          send_reg[2]=pwm_width;
 317   3          send_reg[3]=pwm_width;
 318   3          send_reg[4]=freq;
 319   3          
 320   3          coil_1=btn_val&0x2;
 321   3          coil_2=btn_val&0x4;
 322   3          coil_3=btn_val&0x8;
 323   3          coil_4=btn_val&0x10;
 324   3          auto_manual=btn_val&0x20;
 325   3          pwr_btn=btn_val&0x40;
 326   3          
 327   3          icon_1=(coil_1>>1)&0x01;
 328   3          icon_2=(coil_2>>2)&0x01;
 329   3          icon_3=(coil_3>>3)&0x01;
 330   3          icon_4=(coil_4>>4)&0x01;
 331   3          pwr_icon=(pwr_btn>>6)&0x01;
 332   3          sys_write_vp(0x2105,(u16*)&icon_1,1);
*** WARNING C182 IN LINE 332 OF main.c: pointer to different objects
 333   3          sys_write_vp(0x2107,(u16*)&icon_2,1);
*** WARNING C182 IN LINE 333 OF main.c: pointer to different objects
 334   3          sys_write_vp(0x2109,(u16*)&icon_3,1);
*** WARNING C182 IN LINE 334 OF main.c: pointer to different objects
 335   3          sys_write_vp(0x2111,(u16*)&icon_4,1);
*** WARNING C182 IN LINE 335 OF main.c: pointer to different objects
 336   3          sys_write_vp(0x2113,(u16*)&pwr_icon,1);
*** WARNING C182 IN LINE 336 OF main.c: pointer to different objects
 337   3          
 338   3          if((pwr_icon==1)&&(power_delay==0)){
 339   4          request[0].command = 0x05;
 340   4          request[0].start_register = 0x0000;
 341   4          request[0].num_registers = 0xFF00;
 342   4          power_delay=1;
 343   4          power_timer=0;
 344   4          }
 345   3          
C51 COMPILER V9.53.0.0   MAIN                                                              03/20/2025 10:48:04 PAGE 7   

 346   3          
 347   3          if((pwr_icon==1)&&(power_delay==1)&&(power_timer>=POWER_TIME)){
 348   4          request[0].command = 0x05;
 349   4          request[0].start_register = 0x0001;
 350   4          request[0].num_registers = 0xFF00;
 351   4          power_delay=1;
 352   4          power_timer=0;
 353   4          }
 354   3        
 355   3          if(pwr_icon==0){
 356   4          request[0].command = 0x0F;
 357   4          request[0].start_register = 0x0000;
 358   4          request[0].num_registers = 0x0008;
 359   4          request[0].special_cmd = 0x0100;
 360   4          power_delay=0;
 361   4          power_timer=0;
 362   4          }
 363   3          
 364   3          btn_val&= 0x01;
 365   3          setBitInUint16(&send_reg[7], 0, btn_val);
 366   3          setBitInUint16(&send_reg[7], 1, coil_1);
 367   3          setBitInUint16(&send_reg[7], 2, coil_2);
 368   3          setBitInUint16(&send_reg[7], 3, coil_3);
 369   3          setBitInUint16(&send_reg[7], 4, coil_4);
 370   3          setBitInUint16(&send_reg[7], 5, auto_manual);
 371   3          setBitInUint16(&send_reg[7], 6, pwr_btn);
 372   3          auto_manual=(auto_manual>>5)&0x01;
 373   3          
 374   3          sys_write_vp(0x2075,(u16*)&btn_val,1);
*** WARNING C182 IN LINE 374 OF main.c: pointer to different objects
 375   3          sys_write_vp(0x2060,(u16*)&auto_manual,1);
*** WARNING C182 IN LINE 375 OF main.c: pointer to different objects
 376   3          
 377   3          modbus_requests((ModbusRequest*)&temp_request,send_reg,8);      
 378   3          sys_tick=IDLE_TIME;
 379   3             }
 380   2      
 381   2            polling_timer--;
 382   2            power_timer++;
 383   2          
 384   2          // –°–æ—Å—Ç–æ—è–Ω–∏–µ 1: –û–∂–∏–¥–∞–Ω–∏–µ –æ—Ç–≤–µ—Ç–∞
 385   2          if (polling_state == 1) {
 386   3              // –ï—Å–ª–∏ –ø–æ–ª—É—á–µ–Ω –æ—Ç–≤–µ—Ç
 387   3            
 388   3              if (rcv_complete==1) {
 389   4                  sys_write_vp(0x2042, "Received        \n", 9);      
 390   4                  // –ü–µ—Ä–µ—Ö–æ–¥ –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —É—Å—Ç—Ä–æ–π—Å—Ç–≤—É
 391   4                  current_device=current_device+1;
 392   4                  polling_state = 0;  // –í–æ–∑–≤—Ä–∞—Ç –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–∫–∏
 393   4                  rcv_complete=0;
 394   4                  polling_timer=POLLING_TIME;
 395   4                  sys_tick=IDLE_TIME;
 396   4              }
 397   3              // –ï—Å–ª–∏ –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è –∏—Å—Ç–µ–∫–ª–æ
 398   3               if (polling_timer ==0) {
 399   4                  // –õ–æ–≥–∏—Ä—É–µ–º —Ç–∞–π–º–∞—É—Ç (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
 400   4                  sys_write_vp(0x2042, "Timeout         \n", 9);
 401   4           
 402   4                  for(i=0;i<48;i++)
 403   4                  {
 404   5                    buff[i]=0;
 405   5                  }
C51 COMPILER V9.53.0.0   MAIN                                                              03/20/2025 10:48:04 PAGE 8   

 406   4                          
 407   4                  // –ü–µ—Ä–µ—Ö–æ–¥ –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —É—Å—Ç—Ä–æ–π—Å—Ç–≤—É
 408   4                  current_device=current_device+1;
 409   4                  polling_state = 0;  // –í–æ–∑–≤—Ä–∞—Ç –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–∫–∏
 410   4                  rcv_complete=0;
 411   4                  sys_tick=IDLE_TIME;
 412   4              }     
 413   3          } 
 414   2        }
 415   1          
 416   1      }
 417          
 418          
 419          
 420          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   3104    ----
   CONSTANT SIZE    =    268    ----
   XDATA SIZE       =   ----     202
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----     109
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  18 WARNING(S),  0 ERROR(S)
