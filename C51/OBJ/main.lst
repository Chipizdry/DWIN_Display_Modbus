C51 COMPILER V9.53.0.0   MAIN                                                              02/14/2025 14:34:35 PAGE 1   


C51 COMPILER V9.53.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN ..\OBJ\main.obj
COMPILER INVOKED BY: C:\Program Files (x86)\KEIL\C51\BIN\C51.EXE main.c LARGE OMF2 OPTIMIZE(3,SIZE) BROWSE INCDIR(..\USE
                    -R;..\FUNC_HANDLER;..\GUI_APP;..\HANDWARE\UART2) DEBUG PRINT(..\OBJ\main.lst) TABS(2) OBJECT(..\OBJ\main.obj)

line level    source

   1          #include "sys.h"
   2          #include "uart2.h"
   3          #include <string.h>
   4          extern  u8 modbus_addresses[5];     // –ê–¥—Ä–µ—Å–∞ —É—Å—Ç—Ä–æ–π—Å—Ç–≤
   5          extern  u16 start_reg;              // –ù–∞—á–∞–ª—å–Ω—ã–π —Ä–µ–≥–∏—Å—Ç—Ä
   6          extern  u16 num_reg;                // –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–µ–≥–∏—Å—Ç—Ä–æ–≤
   7          
   8          extern volatile u32 rcv_timer;
   9          extern volatile  u32 sys_tick;
  10          extern u8  uart2_step;
  11          
  12          #define FIRST_TXT    "DGUS Tool\0\0"
  13          #define TEST_TXT     "DGUS TEST TEXT\0\0"
  14          #define INT_TXT    "INERRUPT \0\0"
  15          #define WHILE_TXT    "WHILE___ \0\0"
  16          #define BOUDRATE 9600
  17          #define DEVICES 8
  18          #define BTN_VAL_ADDR 3000
  19          #define POLLING_TIME 160000
  20          #define POWER_TIME 900000
  21          
  22          void main(void)
  23          {   
  24   1      
  25   1      // –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –≤ `xdata`
  26   1      idata  ModbusRequest request[DEVICES] = {
  27   1          {0x1, 0x5,   0x0000, 0x0,0x0000},   // –£—Å—Ç—Ä–æ–π—Å—Ç–≤–æ 1
  28   1          {0x2, 0x3,   0x0000, 0x4,0x0000},   // –£—Å—Ç—Ä–æ–π—Å—Ç–≤–æ 2
  29   1          {0x2, 0x10,  0x0000, 0x1,0x0000},   // –£—Å—Ç—Ä–æ–π—Å—Ç–≤–æ 3
  30   1          {0x3, 0x3,   0x0000, 0x1,0x0000},   // –£—Å—Ç—Ä–æ–π—Å—Ç–≤–æ 4
  31   1          {0x4, 0x3,   0x0000, 0x1,0x0000},   // –£—Å—Ç—Ä–æ–π—Å—Ç–≤–æ 5
  32   1          {0x5, 0x3,   0x0000, 0x1,0x0000},   // –£—Å—Ç—Ä–æ–π—Å—Ç–≤–æ 6
  33   1          {0x6, 0x3,   0x0000, 0x1,0x0000},   // –£—Å—Ç—Ä–æ–π—Å—Ç–≤–æ 7
  34   1          {0x7, 0x3,   0x0000, 0x1,0x0000}    // –£—Å—Ç—Ä–æ–π—Å—Ç–≤–æ 8
  35   1      };
  36   1      
  37   1       idata  ModbusRequest temp_request;
  38   1        u8 send_buff[8]={0,};
  39   1        u32 polling_timer=0;                    // –¢–∞–π–º–µ—Ä –æ–∂–∏–¥–∞–Ω–∏—è –æ—Ç–≤–µ—Ç–∞
  40   1        u8 polling_state;                     // –°–æ—Å—Ç–æ—è–Ω–∏–µ –æ–ø—Ä–æ—Å–∞: 0 - –æ—Ç–ø—Ä–∞–≤–∫–∞, 1 - –æ–∂–
             -∏–¥–∞–Ω–∏–µ
  41   1        u8 power_delay;
  42   1        u32 power_timer;
  43   1        u16 len;
  44   1        u16 i;
  45   1        u8 buff[48]={0, };
  46   1        idata u16 send_reg[8]={0,0,0,0,0,0,0,0 };
  47   1        idata u16 btn_val;
  48   1        u16 pwm_width;
  49   1        u16 coil_1;
  50   1        u16 coil_2;
  51   1        u16 coil_3;
  52   1        u16 coil_4;
  53   1        
C51 COMPILER V9.53.0.0   MAIN                                                              02/14/2025 14:34:35 PAGE 2   

  54   1        u16 icon_1;
  55   1        u16 icon_2;
  56   1        u16 icon_3;
  57   1        u16 icon_4;
  58   1        u16 pwr_btn;
  59   1        u16 pwr_icon;
  60   1        u16 auto_manual;
  61   1        u16 recv_len;
  62   1        idata u8 command_value; 
  63   1        float temperature;
  64   1        float temperature_1;
  65   1        float temperature_2;
  66   1        float temperature_3;
  67   1        float temperature_4;
  68   1        u16 rawValue;
  69   1        xdata ModbusPacket receivedPacket;
  70   1        u16 freq;
  71   1        u16 rpm;
  72   1        u16 receive_cmd=0;
  73   1        xdata u16 receive_adr=0;
  74   1        
  75   1      
  76   1           xdata u16 result=0;  
  77   1           sys_init();//System initialization
  78   1           uart2_init(BOUDRATE);//Initialize serial port 2
  79   1           current_device = 0;
  80   1           polling_state=0;
  81   1           sys_tick=IDLE_TIME;
  82   1           power_delay=0;
  83   1           power_timer=0;
  84   1          
  85   1        while(1){   
  86   2            
  87   2          if((sys_tick==0)&&(polling_state == 1)&&(uart2_rx_sta)){uart2_rx_sta |= UART2_PACKET_OK; }; // –¢–∞–π–º–
             -∞—É—Ç –ø—Ä–µ—Ä—ã–≤–∞–Ω–∏—è –ø—Ä–∏—ë–º–∞ –¥–∞–Ω–Ω—ã—Ö 
  88   2                
  89   2          if(uart2_rx_sta & UART2_PACKET_OK)
  90   2          {
  91   3              
  92   3            len = uart2_rx_sta & UART2_PACKET_LEN;
  93   3              
  94   3            sys_write_vp(0x2069, (u16*)&len, 2);
*** WARNING C182 IN LINE 94 OF main.c: pointer to different objects
  95   3        
  96   3            recv_len = 0;
  97   3            for(i=0;i<len;i++)
  98   3            {
  99   4              recv_len += sprintf(buff+recv_len,"%02X ",(u16)uart2_buf[i]);
 100   4            }
 101   3            sys_write_vp(0x2010,"                                ",16);
 102   3            sys_write_vp(0x2010,buff,recv_len/2+2);
 103   3            for(i=0;i<48;i++)
 104   3            {
 105   4              buff[i]=0;
 106   4            }
 107   3            sys_tick=IDLE_TIME;
 108   3            result=parseModbusPacket(&uart2_buf,len,(ModbusPacket*)&receivedPacket);    
 109   3             sys_write_vp(0x2071, &result, 1);
*** WARNING C182 IN LINE 109 OF main.c: pointer to different objects
 110   3             if (result==1) {   
 111   4                   sys_write_vp(0x2096, "OK    \n", 4);
 112   4             
C51 COMPILER V9.53.0.0   MAIN                                                              02/14/2025 14:34:35 PAGE 3   

 113   4             switch (receivedPacket.rcv_address) {
 114   5      
 115   5                 case 0x01:    
 116   5                  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–ª–∏–Ω—É –¥–∞–Ω–Ω—ã—Ö
 117   5                     /*     if (receivedPacket.rcv_dataLength >= 2) {
 118   5                              // –ò–∑–≤–ª–µ–∫–∞–µ–º –¥–∞–Ω–Ω—ã–µ (–ø–µ—Ä–≤—ã–π —Ä–µ–≥–∏—Å—Ç—Ä)
 119   5                              rawValue = (receivedPacket.rcv_data[0] << 8) | receivedPacket.rcv_data[1];
 120   5                              if (rawValue & 0x8000) { // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–Ω–∞–∫ —á–∏—Å–ª–∞
 121   5                                  rawValue = rawValue - 65536; // –û—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
 122   5                              }
 123   5                             temperature = rawValue / 10.0; // –ú–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–∏–µ
 124   5                             sys_write_vp(0x2005,(u8*)&temperature,2);  
 125   5                             rawValue = 0;                      
 126   5                             } else {
 127   5                            
 128   5                              } */
 129   5                          break;
 130   5                              
 131   5                  case 0x02:            
 132   5                        
 133   5      
 134   5                       if (receivedPacket.rcv_dataLength >= 2) {
 135   6                            
 136   6                          // –ò–∑–≤–ª–µ–∫–∞–µ–º –¥–∞–Ω–Ω—ã–µ (–ø–µ—Ä–≤—ã–π —Ä–µ–≥–∏—Å—Ç—Ä)
 137   6                             freq = (receivedPacket.rcv_data[0] << 8) | receivedPacket.rcv_data[1];  
 138   6                             rpm =(receivedPacket.rcv_data[4] << 8) | receivedPacket.rcv_data[5];
 139   6                              sys_write_vp(0x2081,(u16*)&rpm,1);  
*** WARNING C182 IN LINE 139 OF main.c: pointer to different objects
 140   6                              sys_write_vp(0x2007,(u16*)&freq,2);     
*** WARNING C182 IN LINE 140 OF main.c: pointer to different objects
 141   6                             } else {
 142   6                                sys_write_vp(0x2096, "DATA_ERR\n", 6);
 143   6                               
 144   6                               break;
 145   6                              }
 146   5                          break;               
 147   5                 
 148   5                    case 0x03:     
 149   5                    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–ª–∏–Ω—É –¥–∞–Ω–Ω—ã—Ö
 150   5                          if (receivedPacket.rcv_dataLength >= 2) {
 151   6                              // –ò–∑–≤–ª–µ–∫–∞–µ–º –¥–∞–Ω–Ω—ã–µ (–ø–µ—Ä–≤—ã–π —Ä–µ–≥–∏—Å—Ç—Ä)
 152   6                              rawValue = (receivedPacket.rcv_data[0] << 8) | receivedPacket.rcv_data[1];
 153   6                              if (rawValue & 0x8000) { // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–Ω–∞–∫ —á–∏—Å–ª–∞
 154   7                                  rawValue = rawValue - 65536; // –û—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
 155   7                              }
 156   6                             temperature_1 = rawValue / 10.0; // –ú–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–∏–µ
 157   6                             sys_write_vp(0x2085,(u8*)&temperature_1,2);  
 158   6                             rawValue = 0;                        
 159   6                             } else {
 160   6                            
 161   6                              }
 162   5                          break;                    
 163   5                              
 164   5                              
 165   5                        case 0x04:     
 166   5                        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–ª–∏–Ω—É –¥–∞–Ω–Ω—ã—Ö
 167   5                          if (receivedPacket.rcv_dataLength >= 2) {
 168   6                              // –ò–∑–≤–ª–µ–∫–∞–µ–º –¥–∞–Ω–Ω—ã–µ (–ø–µ—Ä–≤—ã–π —Ä–µ–≥–∏—Å—Ç—Ä)
 169   6                              rawValue = (receivedPacket.rcv_data[0] << 8) | receivedPacket.rcv_data[1];
 170   6                              if (rawValue & 0x8000) { // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–Ω–∞–∫ —á–∏—Å–ª–∞
 171   7                                  rawValue = rawValue - 65536; // –û—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
 172   7                              }
C51 COMPILER V9.53.0.0   MAIN                                                              02/14/2025 14:34:35 PAGE 4   

 173   6                             temperature_2 = rawValue / 10.0; // –ú–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–∏–µ
 174   6                             sys_write_vp(0x2087,(u8*)&temperature_2,2);  
 175   6                             rawValue = 0;                        
 176   6                             } else {
 177   6                            
 178   6                              }
 179   5                          break;                    
 180   5                              
 181   5                              
 182   5                        case 0x05:     
 183   5                        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–ª–∏–Ω—É –¥–∞–Ω–Ω—ã—Ö
 184   5                          if (receivedPacket.rcv_dataLength >= 2) {
 185   6                              // –ò–∑–≤–ª–µ–∫–∞–µ–º –¥–∞–Ω–Ω—ã–µ (–ø–µ—Ä–≤—ã–π —Ä–µ–≥–∏—Å—Ç—Ä)
 186   6                              rawValue = (receivedPacket.rcv_data[0] << 8) | receivedPacket.rcv_data[1];
 187   6                              if (rawValue & 0x8000) { // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–Ω–∞–∫ —á–∏—Å–ª–∞
 188   7                                  rawValue = rawValue - 65536; // –û—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
 189   7                              }
 190   6                             temperature_3 = rawValue / 10.0; // –ú–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–∏–µ
 191   6                             sys_write_vp(0x2089,(u8*)&temperature_3,2);  
 192   6                             rawValue = 0;                        
 193   6                             } else {
 194   6                            
 195   6                              }
 196   5                          break;              
 197   5      
 198   5                        case 0x06:     
 199   5                        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–ª–∏–Ω—É –¥–∞–Ω–Ω—ã—Ö
 200   5                          if (receivedPacket.rcv_dataLength >= 2) {
 201   6                              // –ò–∑–≤–ª–µ–∫–∞–µ–º –¥–∞–Ω–Ω—ã–µ (–ø–µ—Ä–≤—ã–π —Ä–µ–≥–∏—Å—Ç—Ä)
 202   6                              rawValue = (receivedPacket.rcv_data[0] << 8) | receivedPacket.rcv_data[1];
 203   6                              if (rawValue & 0x8000) { // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–Ω–∞–∫ —á–∏—Å–ª–∞
 204   7                                  rawValue = rawValue - 65536; // –û—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
 205   7                              }
 206   6                             temperature_4 = rawValue / 10.0; // –ú–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–∏–µ
 207   6                             sys_write_vp(0x2091,(u8*)&temperature_4,2);  
 208   6                             rawValue = 0;                        
 209   6                             } else {
 210   6                            
 211   6                              }
 212   5                          break;  
 213   5      
 214   5                       case 0x07:    
 215   5                       // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–ª–∏–Ω—É –¥–∞–Ω–Ω—ã—Ö
 216   5                          if (receivedPacket.rcv_dataLength >= 2) {
 217   6                              // –ò–∑–≤–ª–µ–∫–∞–µ–º –¥–∞–Ω–Ω—ã–µ (–ø–µ—Ä–≤—ã–π —Ä–µ–≥–∏—Å—Ç—Ä)
 218   6                              rawValue = (receivedPacket.rcv_data[0] << 8) | receivedPacket.rcv_data[1];
 219   6                              if (rawValue & 0x8000) { // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–Ω–∞–∫ —á–∏—Å–ª–∞
 220   7                                  rawValue = rawValue - 65536; // –û—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
 221   7                              }
 222   6                             temperature = rawValue / 10.0; // –ú–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–∏–µ
 223   6                             sys_write_vp(0x2005,(u8*)&temperature,2);  
 224   6                             rawValue = 0;                      
 225   6                             } else {
 226   6                            
 227   6                              }
 228   5                          break;
 229   5                                                      
 230   5                                        
 231   5                              
 232   5                    default:
 233   5                  break;
 234   5             }
C51 COMPILER V9.53.0.0   MAIN                                                              02/14/2025 14:34:35 PAGE 5   

 235   4             
 236   4             
 237   4             
 238   4             
 239   4             }else if (result == 99) {
 240   4                  sys_write_vp(0x2096, "Lenght\n", 4);
 241   4               sys_delay_ms(20);
 242   4               uart2_rx_sta = 0;
 243   4                uart2_reset(BOUDRATE);
 244   4              }else if (result == 98) {
 245   4                  sys_write_vp(0x2096, "CRC   \n", 4);
 246   4                sys_delay_ms(20);
 247   4                uart2_rx_sta = 0;
 248   4                   uart2_reset(BOUDRATE);
 249   4              }else {
 250   4                  sys_write_vp(0x2096, "ERROR\n", 4);
 251   4                sys_delay_ms(20);
 252   4                uart2_rx_sta = 0;
 253   4                 uart2_reset(BOUDRATE);
 254   4              }
 255   3              
 256   3              uart2_rx_sta = 0;
 257   3              len=0;
 258   3             
 259   3             for(i=0;i<UART2_PACKET_MAX_LEN;i++)
 260   3            {
 261   4              uart2_buf[i]=0;
 262   4            }
 263   3                 
 264   3            rcv_complete=1;
 265   3          }
 266   2         
 267   2          
 268   2        
 269   2          
 270   2      if (polling_state==0) {
 271   3             if (current_device >= DEVICES) {
 272   4                 current_device = 0; // –°–±—Ä–∞—Å—ã–≤–∞–µ–º –∏–Ω–¥–µ–∫—Å, –µ—Å–ª–∏ –æ–Ω –≤—ã—Ö–æ–¥–∏—Ç –∑–∞ –≥—
             -Ä–∞–Ω–∏—Ü—ã
 273   4                }
 274   3        
 275   3                
 276   3          sys_delay_ms(15);
 277   3          temp_request = request[current_device];
 278   3          sys_write_vp(0x2000,(u8*)&current_device,1);
 279   3          command_value = temp_request.command; // –ü—Ä–∏—Å–≤–∞–∏–≤–∞–Ω–∏–µ –∑–Ω–∞—á–µ–Ω–∏—è
 280   3          sys_write_vp(0x2001, &temp_request.command, 1); // –ó–∞–ø–∏—Å—å –∑–Ω–∞—á–µ–Ω–∏—è –∫–æ–º–∞–Ω–¥—ã
*** WARNING C182 IN LINE 280 OF main.c: pointer to different objects
 281   3          sys_write_vp(0x2002, &temp_request.start_register, 1); // –ó–∞–ø–∏—Å—å –ø–µ—Ä–≤–æ–≥–æ —Ä–µ–≥–∏—Å—Ç—Ä–∞
*** WARNING C182 IN LINE 281 OF main.c: pointer to different objects
 282   3                
 283   3          if(command_value==0x03){      
 284   4          data_len=(temp_request.num_registers * 2)+5;  }
 285   3          
 286   3          if(command_value==0x10){      
 287   4          data_len=8;}
 288   3          
 289   3          if(command_value==0x5){     
 290   4          data_len=8;}
 291   3          
 292   3          if(command_value==0x6){     
 293   4          data_len=8;}
C51 COMPILER V9.53.0.0   MAIN                                                              02/14/2025 14:34:35 PAGE 6   

 294   3          
 295   3          if(command_value==0x0F){      
 296   4          data_len=8;}
 297   3          
 298   3          sys_write_vp(0x2003,(u16*)&data_len, 2);  
*** WARNING C182 IN LINE 298 OF main.c: pointer to different objects
 299   3          sys_write_vp(0x2004, &temp_request.address, 1);
*** WARNING C182 IN LINE 299 OF main.c: pointer to different objects
 300   3          polling_timer=POLLING_TIME; 
 301   3          polling_state=1;
 302   3          
 303   3          
 304   3          
 305   3          btn_val=0;
 306   3          sys_read_vp(0x2079,(u16*)&btn_val,1);
*** WARNING C182 IN LINE 306 OF main.c: pointer to different objects
 307   3          sys_read_vp(0x2064,(u16*)&pwm_width,1);
*** WARNING C182 IN LINE 307 OF main.c: pointer to different objects
 308   3          sys_read_vp(0x2073,(u16*)&freq,1);
*** WARNING C182 IN LINE 308 OF main.c: pointer to different objects
 309   3          
 310   3          send_reg[0]=pwm_width;
 311   3          send_reg[1]=pwm_width;
 312   3          send_reg[2]=pwm_width;
 313   3          send_reg[3]=pwm_width;
 314   3          send_reg[4]=freq;
 315   3          
 316   3          coil_1=btn_val&0x2;
 317   3          coil_2=btn_val&0x4;
 318   3          coil_3=btn_val&0x8;
 319   3          coil_4=btn_val&0x10;
 320   3          auto_manual=btn_val&0x20;
 321   3          pwr_btn=btn_val&0x40;
 322   3          
 323   3          icon_1=(coil_1>>1)&0x01;
 324   3          icon_2=(coil_2>>2)&0x01;
 325   3          icon_3=(coil_3>>3)&0x01;
 326   3          icon_4=(coil_4>>4)&0x01;
 327   3          pwr_icon=(pwr_btn>>6)&0x01;
 328   3          sys_write_vp(0x2105,(u16*)&icon_1,1);
*** WARNING C182 IN LINE 328 OF main.c: pointer to different objects
 329   3          sys_write_vp(0x2107,(u16*)&icon_2,1);
*** WARNING C182 IN LINE 329 OF main.c: pointer to different objects
 330   3          sys_write_vp(0x2109,(u16*)&icon_3,1);
*** WARNING C182 IN LINE 330 OF main.c: pointer to different objects
 331   3          sys_write_vp(0x2111,(u16*)&icon_4,1);
*** WARNING C182 IN LINE 331 OF main.c: pointer to different objects
 332   3          sys_write_vp(0x2113,(u16*)&pwr_icon,1);
*** WARNING C182 IN LINE 332 OF main.c: pointer to different objects
 333   3          
 334   3          if((pwr_icon==1)&&(power_delay==0)){
 335   4          request[0].command = 0x05;
 336   4          request[0].start_register = 0x0000;
 337   4          request[0].num_registers = 0xFF00;
 338   4          power_delay=1;
 339   4          power_timer=0;
 340   4          }
 341   3          
 342   3          
 343   3          if((pwr_icon==1)&&(power_delay==1)&&(power_timer>=POWER_TIME)){
 344   4          request[0].command = 0x05;
 345   4          request[0].start_register = 0x0001;
C51 COMPILER V9.53.0.0   MAIN                                                              02/14/2025 14:34:35 PAGE 7   

 346   4          request[0].num_registers = 0xFF00;
 347   4          power_delay=1;
 348   4          power_timer=0;
 349   4          }
 350   3        
 351   3          if(pwr_icon==0){
 352   4          request[0].command = 0x0F;
 353   4          request[0].start_register = 0x0000;
 354   4          request[0].num_registers = 0x0008;
 355   4          request[0].special_cmd = 0x0100;
 356   4          power_delay=0;
 357   4          power_timer=0;
 358   4          }
 359   3          
 360   3          btn_val&= 0x01;
 361   3          setBitInUint16(&send_reg[7], 0, btn_val);
 362   3          setBitInUint16(&send_reg[7], 1, coil_1);
 363   3          setBitInUint16(&send_reg[7], 2, coil_2);
 364   3          setBitInUint16(&send_reg[7], 3, coil_3);
 365   3          setBitInUint16(&send_reg[7], 4, coil_4);
 366   3          setBitInUint16(&send_reg[7], 5, auto_manual);
 367   3          setBitInUint16(&send_reg[7], 6, pwr_btn);
 368   3          auto_manual=(auto_manual>>5)&0x01;
 369   3          
 370   3          sys_write_vp(0x2075,(u16*)&btn_val,1);
*** WARNING C182 IN LINE 370 OF main.c: pointer to different objects
 371   3          sys_write_vp(0x2060,(u16*)&auto_manual,1);
*** WARNING C182 IN LINE 371 OF main.c: pointer to different objects
 372   3          
 373   3          modbus_requests((ModbusRequest*)&temp_request,send_reg,8);      
 374   3          sys_tick=IDLE_TIME;
 375   3             }
 376   2      
 377   2            polling_timer--;
 378   2            power_timer++;
 379   2          
 380   2          // –°–æ—Å—Ç–æ—è–Ω–∏–µ 1: –û–∂–∏–¥–∞–Ω–∏–µ –æ—Ç–≤–µ—Ç–∞
 381   2          if (polling_state == 1) {
 382   3              // –ï—Å–ª–∏ –ø–æ–ª—É—á–µ–Ω –æ—Ç–≤–µ—Ç
 383   3            
 384   3              if (rcv_complete==1) {
 385   4                  sys_write_vp(0x2042, "Received        \n", 9);      
 386   4                  // –ü–µ—Ä–µ—Ö–æ–¥ –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —É—Å—Ç—Ä–æ–π—Å—Ç–≤—É
 387   4                  current_device=current_device+1;
 388   4                  polling_state = 0;  // –í–æ–∑–≤—Ä–∞—Ç –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–∫–∏
 389   4                  rcv_complete=0;
 390   4                  polling_timer=POLLING_TIME;
 391   4                  sys_tick=IDLE_TIME;
 392   4              }
 393   3              // –ï—Å–ª–∏ –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è –∏—Å—Ç–µ–∫–ª–æ
 394   3               if (polling_timer ==0) {
 395   4                  // –õ–æ–≥–∏—Ä—É–µ–º —Ç–∞–π–º–∞—É—Ç (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
 396   4                  sys_write_vp(0x2042, "Timeout         \n", 9);
 397   4           
 398   4                  for(i=0;i<48;i++)
 399   4                  {
 400   5                    buff[i]=0;
 401   5                  }
 402   4                  
 403   4                  
 404   4                  
 405   4                  // –ü–µ—Ä–µ—Ö–æ–¥ –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —É—Å—Ç—Ä–æ–π—Å—Ç–≤—É
C51 COMPILER V9.53.0.0   MAIN                                                              02/14/2025 14:34:35 PAGE 8   

 406   4                  current_device=current_device+1;
 407   4                  polling_state = 0;  // –í–æ–∑–≤—Ä–∞—Ç –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–∫–∏
 408   4                  rcv_complete=0;
 409   4                  sys_tick=IDLE_TIME;
 410   4              }     
 411   3          } 
 412   2        }
 413   1          
 414   1      }
 415          
 416          
 417          
 418          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   3049    ----
   CONSTANT SIZE    =    268    ----
   XDATA SIZE       =   ----     198
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----     109
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  18 WARNING(S),  0 ERROR(S)
